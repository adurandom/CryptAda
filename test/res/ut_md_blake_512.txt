================================================================================
TCantos Ada Cryptography Library (CryptAda)
Version: 0.1.d (2017/04/30)
Copyright (c) 2017, Antonio Duran
================================================================================
CryptAda Test Driver Begin
CryptAda Test Driver Name: CryptAda.Tests.Unit.MD_BLAKE_512
Description              : Unit test driver for CryptAda.Digests.Message_Digests.BLAKE_512 functionality.
Started                  : 2017/05/19 - 18:37:09
================================================================================

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 1
Description     : Getting a handle for message digest objects
Started         : 2017/05/19 - 18:37:09
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Get_Message_Digest_Handle
    - Is_Valid_Handle
    - Invalidate_Handle
    - Get_Message_Digest_Ptr
[I] Before Get_Message_Digest_Handle the handle is invalid:
[I] Handle is invalid
[I] Getting a pointer from an invalid handle will return null
[I] Pointer is null
[I] Trying any operation with a null pointer will raise Constraint_Error
    Trying Digest_Start
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-md_blake_512.adb:237 access check failed"
[I] Getting a message digest handle
[I] Information on handle BEFORE calling Get_Message_Digest_Handle
    Invalid Message_Digest_Handle
[I] Information on handle AFTER calling Get_Message_Digest_Handle
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Now the handle must be invalid:
[I] Handle is valid
[I] Getting a pointer from an invalid handle will return a not null value
[I] Pointer is not null
[I] Computing a hash value may succeed
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Calling Digest_Update
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest information AFTER Digest_Update
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#000000000000000000000000000000E0#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Calling Digest_End to finish processing and obtaining the computed Hash
[I] Digest information AFTER Digest_End
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#000000000000000000000000000000E0#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Checking digest computation results
[I] Expected hash
    - Hash size :  64
    - Hash bytes:
16#FB#, 16#F0#, 16#79#, 16#BA#, 16#97#, 16#A5#, 16#BA#, 16#FE#, 16#B6#, 16#DE#, 16#AE#, 16#6C#, 16#A5#, 16#1F#, 16#C8#, 16#68#, 
16#7D#, 16#A0#, 16#22#, 16#67#, 16#8C#, 16#99#, 16#D3#, 16#A8#, 16#C4#, 16#DC#, 16#B9#, 16#A4#, 16#0B#, 16#82#, 16#E6#, 16#6F#, 
16#BB#, 16#D2#, 16#27#, 16#AE#, 16#58#, 16#C0#, 16#F7#, 16#B5#, 16#1F#, 16#E9#, 16#63#, 16#7E#, 16#28#, 16#46#, 16#27#, 16#A9#, 
16#E5#, 16#B9#, 16#AE#, 16#04#, 16#55#, 16#3D#, 16#96#, 16#5A#, 16#C1#, 16#4F#, 16#E7#, 16#71#, 16#B5#, 16#51#, 16#48#, 16#82#
[I] Obtained hash
    - Hash size :  64
    - Hash bytes:
16#FB#, 16#F0#, 16#79#, 16#BA#, 16#97#, 16#A5#, 16#BA#, 16#FE#, 16#B6#, 16#DE#, 16#AE#, 16#6C#, 16#A5#, 16#1F#, 16#C8#, 16#68#, 
16#7D#, 16#A0#, 16#22#, 16#67#, 16#8C#, 16#99#, 16#D3#, 16#A8#, 16#C4#, 16#DC#, 16#B9#, 16#A4#, 16#0B#, 16#82#, 16#E6#, 16#6F#, 
16#BB#, 16#D2#, 16#27#, 16#AE#, 16#58#, 16#C0#, 16#F7#, 16#B5#, 16#1F#, 16#E9#, 16#63#, 16#7E#, 16#28#, 16#46#, 16#27#, 16#A9#, 
16#E5#, 16#B9#, 16#AE#, 16#04#, 16#55#, 16#3D#, 16#96#, 16#5A#, 16#C1#, 16#4F#, 16#E7#, 16#71#, 16#B5#, 16#51#, 16#48#, 16#82#
[I] Results match
[I] Invalidating handle
[I] Digest information AFTER invalidating handle
    Invalid Message_Digest_Handle
[I] Handle is invalid
[I] Using a pointer from an invalid handle must result in an exception
    Trying Digest_Start
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-md_blake_512.adb:320 access check failed"
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 1
Test Case Result: PASSED
Finished        : 2017/05/19 - 18:37:09
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 2
Description     : Testing default Digest_Start
Started         : 2017/05/19 - 18:37:09
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Digest_Start
    - Digest_Start(With_Salt)
[I] Default Digest_Start will start digest computation with default parameters
    BLAKE-512 has a Salt parameter
    Default salt value is: 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Using defaul Digest_Start
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Getting salt value
[I] Salt values match
[I] Calling Digest_Start(With_Salt)
    Setting Salt value to: 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Getting salt value
[I] Salt values match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 2
Test Case Result: PASSED
Finished        : 2017/05/19 - 18:37:09
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 3
Description     : Testing parametrized Digest_Start
Started         : 2017/05/19 - 18:37:09
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Digest_Start(Parameter_List)
[I] BLAKE-512 accept a parameter list containing a Salt value
[I] Using an empty parameters list will set the default salt value
    Parameter list: ()
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Salt values match
[I] Trying some invalid lists.
    Digest_Start must raise CryptAda_Bad_Argument_Error in all cases
[I] Parameter list: ("000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Parameter list is unnamed"
[I] Parameter list: (The_Salt=>"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Parameter list does not contain mandatory 'Salt' item"
[I] Parameter list: (Salt=>"000102030405060708090a0b0c0d0e0f@101112131415161718191a1b1c1d1e1f")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Caught exception: CRYPTADA.EXCEPTIONS.CRYPTADA_SYNTAX_ERROR, with message: "Invalid hexadecimal digit: '@'". When parsing BLAKE-512 parameter list"
[I] Parameter list: (Salt=>"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Invalid 'Salt' length"
[I] Trying a valid parameter list
[I] Parameter list: (Salt=>"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_512.BLAKE_512_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_512"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  64
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Getting salt value
    Expected Salt value: 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
    Obtained Salt value: 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Salt values match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 3
Test Case Result: PASSED
Finished        : 2017/05/19 - 18:37:09
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 4
Description     : Standard BLAKE-512 test vectors
Started         : 2017/05/19 - 18:37:09
--------------------------------------------------------------------------------
[I] Standard test vectors obtained from BLAKE documentation
    Number of vectors to test:  2
[I] Computing hash for a test vector:
    Hash algorithm                : MD_BLAKE_512
    Vector string                 : ""
    Vector length                 :  1
    Vector array                  : 
16#00#
[I] Digest results
    Expected bit count            : 16#00000000000000000000000000000008#
    Obtained bit count            : 16#00000000000000000000000000000008#
    Expected hash (String)        : "97961587F6D970FABA6D2478045DE6D1FABD09B61AE50932054D52BC29D31BE4FF9102B9F69E2BBDB83BE13D4B9C06091E5FA0B48BD081B634058BE0EC49BEB3"
    Obtained hash (String)        : "97961587F6D970FABA6D2478045DE6D1FABD09B61AE50932054D52BC29D31BE4FF9102B9F69E2BBDB83BE13D4B9C06091E5FA0B48BD081B634058BE0EC49BEB3"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for a test vector:
    Hash algorithm                : MD_BLAKE_512
    Vector string                 : ""
    Vector length                 :  144
    Vector array                  : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#
[I] Digest results
    Expected bit count            : 16#00000000000000000000000000000480#
    Obtained bit count            : 16#00000000000000000000000000000480#
    Expected hash (String)        : "313717D608E9CF758DCB1EB0F0C3CF9FC150B2D500FB33F51C52AFC99D358A2F1374B8A38BBA7974E7F6EF79CAB16F22CE1E649D6E01AD9589C213045D545DDE"
    Obtained hash (String)        : "313717D608E9CF758DCB1EB0F0C3CF9FC150B2D500FB33F51C52AFC99D358A2F1374B8A38BBA7974E7F6EF79CAB16F22CE1E649D6E01AD9589C213045D545DDE"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 4
Test Case Result: PASSED
Finished        : 2017/05/19 - 18:37:09
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 5
Description     : CryptAda BLAKE-512 test vectors
Started         : 2017/05/19 - 18:37:09
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained from https://asecuritysite.com/encryption/blake
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count            : 16#00000000000000000000000000000000#
    Obtained bit count            : 16#00000000000000000000000000000000#
    Expected hash (String)        : "A8CFBBD73726062DF0C6864DDA65DEFE58EF0CC52A5625090FA17601E1EECD1B628E94F396AE402A00ACC9EAB77B4D4C2E852AAAA25A636D80AF3FC7913EF5B8"
    Obtained hash (String)        : "A8CFBBD73726062DF0C6864DDA65DEFE58EF0CC52A5625090FA17601E1EECD1B628E94F396AE402A00ACC9EAB77B4D4C2E852AAAA25A636D80AF3FC7913EF5B8"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count            : 16#00000000000000000000000000000008#
    Obtained bit count            : 16#00000000000000000000000000000008#
    Expected hash (String)        : "780FCA7981665E2DC073AD3E64699401A8503D62A18742AD5DE7C42BF2CF269A1805DF497D4E8B148D91A04A6128986CE4E4D29FB97952446868B2F5D915D9E5"
    Obtained hash (String)        : "780FCA7981665E2DC073AD3E64699401A8503D62A18742AD5DE7C42BF2CF269A1805DF497D4E8B148D91A04A6128986CE4E4D29FB97952446868B2F5D915D9E5"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count            : 16#00000000000000000000000000000018#
    Obtained bit count            : 16#00000000000000000000000000000018#
    Expected hash (String)        : "14266C7C704A3B58FB421EE69FD005FCC6EEFF742136BE67435DF995B7C986E7CBDE4DBDE135E7689C354D2BC5B8D260536C554B4F84C118E61EFC576FED7CD3"
    Obtained hash (String)        : "14266C7C704A3B58FB421EE69FD005FCC6EEFF742136BE67435DF995B7C986E7CBDE4DBDE135E7689C354D2BC5B8D260536C554B4F84C118E61EFC576FED7CD3"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count            : 16#00000000000000000000000000000070#
    Obtained bit count            : 16#00000000000000000000000000000070#
    Expected hash (String)        : "655495005D3568793DCBA49C055CEFA368660E66B0F11AED62441E3EE75280A05C4D22EE87AC0326E558B4B2103149940F4FD88E91367FB41A4CE1F7DD3C4B44"
    Obtained hash (String)        : "655495005D3568793DCBA49C055CEFA368660E66B0F11AED62441E3EE75280A05C4D22EE87AC0326E558B4B2103149940F4FD88E91367FB41A4CE1F7DD3C4B44"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count            : 16#000000000000000000000000000000D0#
    Obtained bit count            : 16#000000000000000000000000000000D0#
    Expected hash (String)        : "B43E440FDF5987F4D72A3A2E65A6A9CD28EC01E72DEC278581A63E997F4ADA27F581721CE0D7244C1BEBBEFCB67377EA8C487D82D18F9CE3E50A1682139E4CF1"
    Obtained hash (String)        : "B43E440FDF5987F4D72A3A2E65A6A9CD28EC01E72DEC278581A63E997F4ADA27F581721CE0D7244C1BEBBEFCB67377EA8C487D82D18F9CE3E50A1682139E4CF1"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count            : 16#000000000000000000000000000001F0#
    Obtained bit count            : 16#000000000000000000000000000001F0#
    Expected hash (String)        : "E674FD9F9024150FE7F4C9BF3BB1B314DF9EBD1A1640256F87EBED11A9A751CD3B5867A44D3B92AAA4F52F14851AF494193FA18156E48DF3120A4AA73FE85F59"
    Obtained hash (String)        : "E674FD9F9024150FE7F4C9BF3BB1B314DF9EBD1A1640256F87EBED11A9A751CD3B5867A44D3B92AAA4F52F14851AF494193FA18156E48DF3120A4AA73FE85F59"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count            : 16#00000000000000000000000000000280#
    Obtained bit count            : 16#00000000000000000000000000000280#
    Expected hash (String)        : "5A58387F673EC8494F0ECCD6BE55D8A31FCE0B35881CEAB96D133180EA9D62BE9FE0B5EBD4962E134EAB347CA4DCECEAFCC2C7C085C140A2583D8260C06844A7"
    Obtained hash (String)        : "5A58387F673EC8494F0ECCD6BE55D8A31FCE0B35881CEAB96D133180EA9D62BE9FE0B5EBD4962E134EAB347CA4DCECEAFCC2C7C085C140A2583D8260C06844A7"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count            : 16#00000000000000000000000000000158#
    Obtained bit count            : 16#00000000000000000000000000000158#
    Expected hash (String)        : "1F7E26F63B6AD25A0896FD978FD050A1766391D2FD0471A77AFB975E5034B7AD2D9CCF8DFB47ABBBE656E1B82FBC634BA42CE186E8DC5E1CE09A885D41F43451"
    Obtained hash (String)        : "1F7E26F63B6AD25A0896FD978FD050A1766391D2FD0471A77AFB975E5034B7AD2D9CCF8DFB47ABBBE656E1B82FBC634BA42CE186E8DC5E1CE09A885D41F43451"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_512
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count            : 16#000000000000000000000000000000E0#
    Obtained bit count            : 16#000000000000000000000000000000E0#
    Expected hash (String)        : "FBF079BA97A5BAFEB6DEAE6CA51FC8687DA022678C99D3A8C4DCB9A40B82E66FBBD227AE58C0F7B51FE9637E284627A9E5B9AE04553D965AC14FE771B5514882"
    Obtained hash (String)        : "FBF079BA97A5BAFEB6DEAE6CA51FC8687DA022678C99D3A8C4DCB9A40B82E66FBBD227AE58C0F7B51FE9637E284627A9E5B9AE04553D965AC14FE771B5514882"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 5
Test Case Result: PASSED
Finished        : 2017/05/19 - 18:37:09
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 6
Description     : Testing BLAKE-512 operation at counter offset and block boundary.
Started         : 2017/05/19 - 18:37:09
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained from https://asecuritysite.com/encryption/blake
[I] Checking at counter offset boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  111
[I] Digest result for test vector:  1
    Expected bit count            : 16#00000000000000000000000000000378#
    Obtained bit count            : 16#00000000000000000000000000000378#
    Expected hash (String)        : "93E94241778A8B6E7461F8567963AEE4DC7CE2A8D6F187BB4341C889570E2E96F8598569281C813A4283487B3492D8797C389A7C8927E99186EFABB68CCCAB1D"
    Obtained hash (String)        : "93E94241778A8B6E7461F8567963AEE4DC7CE2A8D6F187BB4341C889570E2E96F8598569281C813A4283487B3492D8797C389A7C8927E99186EFABB68CCCAB1D"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  112
[I] Digest result for test vector:  2
    Expected bit count            : 16#00000000000000000000000000000380#
    Obtained bit count            : 16#00000000000000000000000000000380#
    Expected hash (String)        : "2E09048ABF211AF05D6F9B76434798BFE3C6B89342FB3BA75C334062BE9A9901EBF6197A223C570C7199205EA9A0D5C07B9541722C07513FA009D2445D6DE61C"
    Obtained hash (String)        : "2E09048ABF211AF05D6F9B76434798BFE3C6B89342FB3BA75C334062BE9A9901EBF6197A223C570C7199205EA9A0D5C07B9541722C07513FA009D2445D6DE61C"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  113
[I] Digest result for test vector:  3
    Expected bit count            : 16#00000000000000000000000000000388#
    Obtained bit count            : 16#00000000000000000000000000000388#
    Expected hash (String)        : "D2A5E5FA5AB75056890DE69B5567065716AB5982B2D95E6A01D7E333D4B0F43CF72CB0006B458E6A5F0173221E025A1DB0800C972D6A7B66C7308D00B2D8C12C"
    Obtained hash (String)        : "D2A5E5FA5AB75056890DE69B5567065716AB5982B2D95E6A01D7E333D4B0F43CF72CB0006B458E6A5F0173221E025A1DB0800C972D6A7B66C7308D00B2D8C12C"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count            : 16#000000000000000000000000000003F8#
    Obtained bit count            : 16#000000000000000000000000000003F8#
    Expected hash (String)        : "130FFE127EDD0E53096332BAF5D9FF2AEC18C1C8519E8F4B4477F9EF863076C3395220B855219CDF9BF45C75C97282D1AEF61B3B562ED5C1B91574A02C4699A9"
    Obtained hash (String)        : "130FFE127EDD0E53096332BAF5D9FF2AEC18C1C8519E8F4B4477F9EF863076C3395220B855219CDF9BF45C75C97282D1AEF61B3B562ED5C1B91574A02C4699A9"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count            : 16#00000000000000000000000000000400#
    Obtained bit count            : 16#00000000000000000000000000000400#
    Expected hash (String)        : "E9C1FAF06BA46DF441C96D4A1EAA97342C6C8E84A32405EF4920F697213F15D8AE9FE8446FA0574108704A853511523BFCC58BF67AAFAA6101E2F70E393D542E"
    Obtained hash (String)        : "E9C1FAF06BA46DF441C96D4A1EAA97342C6C8E84A32405EF4920F697213F15D8AE9FE8446FA0574108704A853511523BFCC58BF67AAFAA6101E2F70E393D542E"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count            : 16#00000000000000000000000000000408#
    Obtained bit count            : 16#00000000000000000000000000000408#
    Expected hash (String)        : "CCF32186E8C56DABB5809F1C5568D63CEB0CCFF499E476CF99BEEF16A1150F990C3CEB523A4EAC6F6EA557A6EE7C715377F326515B28B0AD21D2AC070D645A1A"
    Obtained hash (String)        : "CCF32186E8C56DABB5809F1C5568D63CEB0CCFF499E476CF99BEEF16A1150F990C3CEB523A4EAC6F6EA557A6EE7C715377F326515B28B0AD21D2AC070D645A1A"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 6
Test Case Result: PASSED
Finished        : 2017/05/19 - 18:37:09
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 7
Description     : Another BLAKE-512 test vector: 1,000,000 repetitions of 'a'
Started         : 2017/05/19 - 18:37:09
--------------------------------------------------------------------------------
[I] Performng 1,000 iteratios with a 1,000 bytes buffer
    Expected bit count (Low, High): ( 8000000,  0)
    Expected hash                 : "E5D3ECF60CBF8ED8B44307AE6606F4C8EAE0A602C2A393F529CF405A1384C791C3CE58F54838A76B89A6455E988D63F98222EA82BF26E11E970516FB7C62B41D"
    Obtained bit count (Low, High): ( 8000000,  0)
    Obtained hash                 : "E5D3ECF60CBF8ED8B44307AE6606F4C8EAE0A602C2A393F529CF405A1384C791C3CE58F54838A76B89A6455E988D63F98222EA82BF26E11E970516FB7C62B41D"
[I] Counters match
[I] Hashes match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 7
Test Case Result: PASSED
Finished        : 2017/05/19 - 18:37:09
--[End Test Case]---------------------------------------------------------------

================================================================================
CryptAda Test Driver End
CryptAda Test Driver Name: CryptAda.Tests.Unit.MD_BLAKE_512
Finished                 : 2017/05/19 - 18:37:09
================================================================================
