================================================================================
TCantos Ada Cryptography Library (CryptAda)
Version: 0.1.a (2017/03/31)
Copyright (c) 2017, Antonio Duran
================================================================================
CryptAda Test Driver Begin
CryptAda Test Driver Name: CryptAda.Tests.Unit.HAVAL
Description              : Unit test driver for CryptAda.Digests.Algorithms.HAVAL functionality.
Started                  : 2017/03/22 - 19:49:35
================================================================================

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 1
Description     : CryptAda message digest basic operation
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] HAVAL digest parameters:
    Passes                        : " 3"
    Hash size id                  : "HAVAL_128"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_128_3"
    Digest algorithm SCAN name    : "HAVAL(16,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.1"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  16
    Processed bit count           : ( 0,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_128
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_128_3"
    Digest algorithm SCAN name    : "HAVAL(16,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.1"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  16
    Processed bit count           : ( 224,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_128
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "81d06f60c896055d4e3c06c5f4545902"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 3"
    Hash size id                  : "HAVAL_160"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_160_3"
    Digest algorithm SCAN name    : "HAVAL(20,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  20
    Processed bit count           : ( 0,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_160
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_160_3"
    Digest algorithm SCAN name    : "HAVAL(20,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  20
    Processed bit count           : ( 224,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_160
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "e373e61faff254308968ce7e053a63ddd334dade"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 3"
    Hash size id                  : "HAVAL_192"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_192_3"
    Digest algorithm SCAN name    : "HAVAL(24,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.3"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  24
    Processed bit count           : ( 0,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_192
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_192_3"
    Digest algorithm SCAN name    : "HAVAL(24,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.3"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  24
    Processed bit count           : ( 224,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_192
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "b913d13287858dc4a0bc18d5c155589534e0cd7bab50e38d"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 3"
    Hash size id                  : "HAVAL_224"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_224_3"
    Digest algorithm SCAN name    : "HAVAL(28,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.4"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  28
    Processed bit count           : ( 0,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_224
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_224_3"
    Digest algorithm SCAN name    : "HAVAL(28,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.4"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  28
    Processed bit count           : ( 224,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_224
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "5c3480a77e7269e705f77ffd7ae44e6d3a4b60bd2fdfcda5f93c459d"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 3"
    Hash size id                  : "HAVAL_256"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_3"
    Digest algorithm SCAN name    : "HAVAL(32,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.5"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_256
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_3"
    Digest algorithm SCAN name    : "HAVAL(32,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.5"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 224,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_256
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "4d011ff4978d444b2778ff45be4ccfa5ade53882ea20769019e6a3dd9882e161"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 4"
    Hash size id                  : "HAVAL_128"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_128_4"
    Digest algorithm SCAN name    : "HAVAL(16,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.6"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  16
    Processed bit count           : ( 0,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_128
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_128_4"
    Digest algorithm SCAN name    : "HAVAL(16,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.6"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  16
    Processed bit count           : ( 224,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_128
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "67f44824b0cfc0e8bbf319c41b9684db"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 4"
    Hash size id                  : "HAVAL_160"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_160_4"
    Digest algorithm SCAN name    : "HAVAL(20,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.7"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  20
    Processed bit count           : ( 0,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_160
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_160_4"
    Digest algorithm SCAN name    : "HAVAL(20,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.7"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  20
    Processed bit count           : ( 224,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_160
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "60b46ec2a777a9c5c114ca70ea7c7968e110e7f1"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 4"
    Hash size id                  : "HAVAL_192"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_192_4"
    Digest algorithm SCAN name    : "HAVAL(24,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.8"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  24
    Processed bit count           : ( 0,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_192
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_192_4"
    Digest algorithm SCAN name    : "HAVAL(24,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.8"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  24
    Processed bit count           : ( 224,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_192
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "e07219582e7bd97e86e4e2b7e8b405b7746c433e0364b929"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 4"
    Hash size id                  : "HAVAL_224"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_224_4"
    Digest algorithm SCAN name    : "HAVAL(28,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.9"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  28
    Processed bit count           : ( 0,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_224
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_224_4"
    Digest algorithm SCAN name    : "HAVAL(28,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.9"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  28
    Processed bit count           : ( 224,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_224
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "45336db282b6b75589dd80320a7c14dd2c1111cd9ec86e88d53bac31"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 4"
    Hash size id                  : "HAVAL_256"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_4"
    Digest algorithm SCAN name    : "HAVAL(32,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.10"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_256
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_4"
    Digest algorithm SCAN name    : "HAVAL(32,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.10"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 224,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_256
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "d5af6e503f2380ad5e934b9250cbed30d3617de5fdb9a954c69fc7b920244859"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 5"
    Hash size id                  : "HAVAL_128"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_128_5"
    Digest algorithm SCAN name    : "HAVAL(16,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.11"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  16
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_128
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_128_5"
    Digest algorithm SCAN name    : "HAVAL(16,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.11"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  16
    Processed bit count           : ( 224,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_128
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "88a4e1518d57a7df38034716b6e87818"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 5"
    Hash size id                  : "HAVAL_160"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_160_5"
    Digest algorithm SCAN name    : "HAVAL(20,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.12"
    Digest algorithm OpenPGP name : "OpenPGP.Digest.7"
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  20
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_160
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_160_5"
    Digest algorithm SCAN name    : "HAVAL(20,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.12"
    Digest algorithm OpenPGP name : "OpenPGP.Digest.7"
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  20
    Processed bit count           : ( 224,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_160
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "2fb12081b9e1dce44686e9d693a65ded725e1e1b"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 5"
    Hash size id                  : "HAVAL_192"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_192_5"
    Digest algorithm SCAN name    : "HAVAL(24,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.13"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  24
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_192
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_192_5"
    Digest algorithm SCAN name    : "HAVAL(24,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.13"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  24
    Processed bit count           : ( 224,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_192
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "863377553270363d208818b4ce1abf173e0a2eead045ffcb"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 5"
    Hash size id                  : "HAVAL_224"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_224_5"
    Digest algorithm SCAN name    : "HAVAL(28,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.14"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  28
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_224
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_224_5"
    Digest algorithm SCAN name    : "HAVAL(28,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.14"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  28
    Processed bit count           : ( 224,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_224
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "6d6e3b90b943a7990bf98ce9f8c13cd4c7c7fefc40c377bac19ed4a2"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] HAVAL digest parameters:
    Passes                        : " 5"
    Hash size id                  : "HAVAL_256"
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 224,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "c60fe005462f2371869f11a456569bac0627edc14ffc760fb12fe64ee3bbe120"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
--------------------------------------------------------------------------------
Test Case Number: 1
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 2
Description     : Standard HAVAL test vectors
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Using test vectors obtained from https://web.archive.org/web/20150111210116/http://labs.calyptix.com/haval.php
    Number of vectors to test:  6
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_128_3"
    Digest algorithm SCAN name    : "HAVAL(16,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.1"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  16
    Processed bit count           : ( 0,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_128
[I] Computing hash for a test vector:
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "c68f39913f901f3ddf44c707357a7d70"
    Obtained hash (String)        : "c68f39913f901f3ddf44c707357a7d70"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_160_3"
    Digest algorithm SCAN name    : "HAVAL(20,3)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  20
    Processed bit count           : ( 0,  0)
    Passes                        :  3
    Hash size id                  : HAVAL_160
[I] Computing hash for a test vector:
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "4da08f514a7275dbc4cece4a347385983983a830"
    Obtained hash (String)        : "4da08f514a7275dbc4cece4a347385983983a830"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_192_4"
    Digest algorithm SCAN name    : "HAVAL(24,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.8"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  24
    Processed bit count           : ( 0,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_192
[I] Computing hash for a test vector:
    Vector string                 : "HAVAL"
    Vector length                 :  5
    Vector array                  : 
16#48#, 16#41#, 16#56#, 16#41#, 16#4C#
[I] Digest results
    Expected bit count (Low, High): ( 40,  0)
    Obtained bit count (Low, High): ( 40,  0)
    Expected hash (String)        : "0c1396d7772689c46773f3daaca4efa982adbfb2f1467eea"
    Obtained hash (String)        : "0c1396d7772689c46773f3daaca4efa982adbfb2f1467eea"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_224_4"
    Digest algorithm SCAN name    : "HAVAL(28,4)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.9"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  28
    Processed bit count           : ( 0,  0)
    Passes                        :  4
    Hash size id                  : HAVAL_224
[I] Computing hash for a test vector:
    Vector string                 : "0123456789"
    Vector length                 :  10
    Vector array                  : 
16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#
[I] Digest results
    Expected bit count (Low, High): ( 80,  0)
    Obtained bit count (Low, High): ( 80,  0)
    Expected hash (String)        : "bebd7816f09baeecf8903b1b9bc672d9fa428e462ba699f814841529"
    Obtained hash (String)        : "bebd7816f09baeecf8903b1b9bc672d9fa428e462ba699f814841529"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Computing hash for a test vector:
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "c9c7d8afa159fd9e965cb83ff5ee6f58aeda352c0eff005548153a61551c38ee"
    Obtained hash (String)        : "c9c7d8afa159fd9e965cb83ff5ee6f58aeda352c0eff005548153a61551c38ee"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.HAVAL.HAVAL_DIGEST"
    CryptAda digest algorithm id  : "MD_HAVAL_256_5"
    Digest algorithm SCAN name    : "HAVAL(32,5)"
    Digest algorithm ASN1 OID     : "1.3.6.1.4.1.18105.2.1.1.15"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  128
    Hash size (bytes)             :  32
    Processed bit count           : ( 0,  0)
    Passes                        :  5
    Hash size id                  : HAVAL_256
[I] Computing hash for a test vector:
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "b45cb6e62f2b1320e4f8f1b0b273d45add47c321fd23999dcf403ac37636d963"
    Obtained hash (String)        : "b45cb6e62f2b1320e4f8f1b0b273d45add47c321fd23999dcf403ac37636d963"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
--------------------------------------------------------------------------------
Test Case Number: 2
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 3
Description     : CryptAda HAVAL (128-bit) test vectors
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Number of passes:  3
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "c68f39913f901f3ddf44c707357a7d70"
    Obtained hash (String)        : "c68f39913f901f3ddf44c707357a7d70"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "0cd40739683e15f01ca5dbceef4059f1"
    Obtained hash (String)        : "0cd40739683e15f01ca5dbceef4059f1"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "9e40ed883fb63e985d299b40cda2b8f2"
    Obtained hash (String)        : "9e40ed883fb63e985d299b40cda2b8f2"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "3caf4a79e81adcd6d1716bcc1cef4573"
    Obtained hash (String)        : "3caf4a79e81adcd6d1716bcc1cef4573"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "dc502247fb3eb8376109eda32d361d82"
    Obtained hash (String)        : "dc502247fb3eb8376109eda32d361d82"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "de5eb3f7d9eb08fae7a07d68e3047ec6"
    Obtained hash (String)        : "de5eb3f7d9eb08fae7a07d68e3047ec6"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "d15c566b5c1b84928236ca065565208f"
    Obtained hash (String)        : "d15c566b5c1b84928236ca065565208f"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "713502673d67e5fa557629a71d331945"
    Obtained hash (String)        : "713502673d67e5fa557629a71d331945"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_3
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "81d06f60c896055d4e3c06c5f4545902"
    Obtained hash (String)        : "81d06f60c896055d4e3c06c5f4545902"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  4
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "ee6bbf4d6a46a679b3a856c88538bb98"
    Obtained hash (String)        : "ee6bbf4d6a46a679b3a856c88538bb98"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "5cd07f03330c3b5020b29ba75911e17d"
    Obtained hash (String)        : "5cd07f03330c3b5020b29ba75911e17d"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "6f2132867c9648419adcd5013e532fa2"
    Obtained hash (String)        : "6f2132867c9648419adcd5013e532fa2"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "faee633871b30771ecda708d66fe6551"
    Obtained hash (String)        : "faee633871b30771ecda708d66fe6551"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "b2a73b99775ffb17cd8781b85ec66221"
    Obtained hash (String)        : "b2a73b99775ffb17cd8781b85ec66221"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "cad57c0563bda208d66bb89eb922e2a2"
    Obtained hash (String)        : "cad57c0563bda208d66bb89eb922e2a2"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "edf66fa258f61206595b7c261cf2f812"
    Obtained hash (String)        : "edf66fa258f61206595b7c261cf2f812"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "6eece560a2e8d6b919e81fe91b0e7156"
    Obtained hash (String)        : "6eece560a2e8d6b919e81fe91b0e7156"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_4
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "67f44824b0cfc0e8bbf319c41b9684db"
    Obtained hash (String)        : "67f44824b0cfc0e8bbf319c41b9684db"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  5
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "184b8482a0c050dca54b59c7f05bf5dd"
    Obtained hash (String)        : "184b8482a0c050dca54b59c7f05bf5dd"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "f23fbe704be8494bfa7a7fb4f8ab09e5"
    Obtained hash (String)        : "f23fbe704be8494bfa7a7fb4f8ab09e5"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "d054232fe874d9c6c6dc8e6a853519ea"
    Obtained hash (String)        : "d054232fe874d9c6c6dc8e6a853519ea"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "c28052dc143c1c70450d3c0504756efe"
    Obtained hash (String)        : "c28052dc143c1c70450d3c0504756efe"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "0efff71d7d14344cba1f4b25f924a693"
    Obtained hash (String)        : "0efff71d7d14344cba1f4b25f924a693"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "4b27d04ddb516bdcdfeb96eb8c7c8e90"
    Obtained hash (String)        : "4b27d04ddb516bdcdfeb96eb8c7c8e90"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "2395f65e5eeb485293fc561a0b349f1e"
    Obtained hash (String)        : "2395f65e5eeb485293fc561a0b349f1e"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "696f02111f2e1da5c21d50eb782b7e8f"
    Obtained hash (String)        : "696f02111f2e1da5c21d50eb782b7e8f"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_128_5
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "88a4e1518d57a7df38034716b6e87818"
    Obtained hash (String)        : "88a4e1518d57a7df38034716b6e87818"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
--------------------------------------------------------------------------------
Test Case Number: 3
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 4
Description     : CryptAda HAVAL (160-bit) test vectors
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Number of passes:  3
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "d353c3ae22a25401d257643836d7231a9a95f953"
    Obtained hash (String)        : "d353c3ae22a25401d257643836d7231a9a95f953"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "4da08f514a7275dbc4cece4a347385983983a830"
    Obtained hash (String)        : "4da08f514a7275dbc4cece4a347385983983a830"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "b21e876c4d391e2a897661149d83576b5530a089"
    Obtained hash (String)        : "b21e876c4d391e2a897661149d83576b5530a089"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "43a47f6f1c016207f08be8115c0977bf155346da"
    Obtained hash (String)        : "43a47f6f1c016207f08be8115c0977bf155346da"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "eba9fa6050f24c07c29d1834a60900ea4e32e61b"
    Obtained hash (String)        : "eba9fa6050f24c07c29d1834a60900ea4e32e61b"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "97dc988d97caae757be7523c4e8d4ea63007a4b9"
    Obtained hash (String)        : "97dc988d97caae757be7523c4e8d4ea63007a4b9"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "34038b573ef4a91ebfe54fc67b8b24ea11654eac"
    Obtained hash (String)        : "34038b573ef4a91ebfe54fc67b8b24ea11654eac"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "b338ac397e8bccadcccd96549cadd4882d834107"
    Obtained hash (String)        : "b338ac397e8bccadcccd96549cadd4882d834107"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_3
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "e373e61faff254308968ce7e053a63ddd334dade"
    Obtained hash (String)        : "e373e61faff254308968ce7e053a63ddd334dade"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  4
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "1d33aae1be4146dbaaca0b6e70d7a11f10801525"
    Obtained hash (String)        : "1d33aae1be4146dbaaca0b6e70d7a11f10801525"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "e0a5be29627332034d4dd8a910a1a0e6fe04084d"
    Obtained hash (String)        : "e0a5be29627332034d4dd8a910a1a0e6fe04084d"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "77aca22f5b12cc09010afc9c0797308638b1cb9b"
    Obtained hash (String)        : "77aca22f5b12cc09010afc9c0797308638b1cb9b"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "429346bb57211af6651060fd02db264fbe9c4365"
    Obtained hash (String)        : "429346bb57211af6651060fd02db264fbe9c4365"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "1c7884af86d11ac120fe5df75cee792d2dfa48ef"
    Obtained hash (String)        : "1c7884af86d11ac120fe5df75cee792d2dfa48ef"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "148334aad24b658bdc946c521cdd2b1256608c7b"
    Obtained hash (String)        : "148334aad24b658bdc946c521cdd2b1256608c7b"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "238770cb2812aed0bd43335d5c8e5785e819a1f1"
    Obtained hash (String)        : "238770cb2812aed0bd43335d5c8e5785e819a1f1"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "6e739d01f5739ceed94da1a115b52d5951280560"
    Obtained hash (String)        : "6e739d01f5739ceed94da1a115b52d5951280560"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_4
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "60b46ec2a777a9c5c114ca70ea7c7968e110e7f1"
    Obtained hash (String)        : "60b46ec2a777a9c5c114ca70ea7c7968e110e7f1"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  5
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "255158cfc1eed1a7be7c55ddd64d9790415b933b"
    Obtained hash (String)        : "255158cfc1eed1a7be7c55ddd64d9790415b933b"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "f5147df7abc5e3c81b031268927c2b5761b5a2b5"
    Obtained hash (String)        : "f5147df7abc5e3c81b031268927c2b5761b5a2b5"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "ae646b04845e3351f00c5161d138940e1fa0c11c"
    Obtained hash (String)        : "ae646b04845e3351f00c5161d138940e1fa0c11c"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "2ac00ef52871b373eda407d7eafbd225987f33f1"
    Obtained hash (String)        : "2ac00ef52871b373eda407d7eafbd225987f33f1"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "917836a9d27eed42d406f6002e7d11a0f87c404c"
    Obtained hash (String)        : "917836a9d27eed42d406f6002e7d11a0f87c404c"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "6ddbde98ea1c4f8c7f360fb9163c7c952680aa70"
    Obtained hash (String)        : "6ddbde98ea1c4f8c7f360fb9163c7c952680aa70"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "a807c7a8a1afa6d8dd64cb395917f5792748243c"
    Obtained hash (String)        : "a807c7a8a1afa6d8dd64cb395917f5792748243c"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "ecce9fa8a428866304ff082af2f9062637d36b23"
    Obtained hash (String)        : "ecce9fa8a428866304ff082af2f9062637d36b23"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_160_5
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "2fb12081b9e1dce44686e9d693a65ded725e1e1b"
    Obtained hash (String)        : "2fb12081b9e1dce44686e9d693a65ded725e1e1b"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
--------------------------------------------------------------------------------
Test Case Number: 4
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 5
Description     : CryptAda HAVAL (192-bit) test vectors
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Number of passes:  3
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "e9c48d7903eaf2a91c5b350151efcb175c0fc82de2289a4e"
    Obtained hash (String)        : "e9c48d7903eaf2a91c5b350151efcb175c0fc82de2289a4e"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "b359c8835647f5697472431c142731ff6e2cddcacc4f6e08"
    Obtained hash (String)        : "b359c8835647f5697472431c142731ff6e2cddcacc4f6e08"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "a7b14c9ef3092319b0e75e3b20b957d180bf20745629e8de"
    Obtained hash (String)        : "a7b14c9ef3092319b0e75e3b20b957d180bf20745629e8de"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "6c4d9ec368efc96eeea58e132bdb2391c2b3e9d20190f7ea"
    Obtained hash (String)        : "6c4d9ec368efc96eeea58e132bdb2391c2b3e9d20190f7ea"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "a25e1456e6863e7d7c74017bb3e098e086ad4be0580d7056"
    Obtained hash (String)        : "a25e1456e6863e7d7c74017bb3e098e086ad4be0580d7056"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "def6653091e3005b43a61681014a066cd189009d00856ee7"
    Obtained hash (String)        : "def6653091e3005b43a61681014a066cd189009d00856ee7"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "0706697dd426d8549504c64fb1de2eca5492513b18da7193"
    Obtained hash (String)        : "0706697dd426d8549504c64fb1de2eca5492513b18da7193"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "58e6ced002e311172483d434ba738ad033e7fa950e431503"
    Obtained hash (String)        : "58e6ced002e311172483d434ba738ad033e7fa950e431503"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_3
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "b913d13287858dc4a0bc18d5c155589534e0cd7bab50e38d"
    Obtained hash (String)        : "b913d13287858dc4a0bc18d5c155589534e0cd7bab50e38d"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  4
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "4a8372945afa55c7dead800311272523ca19d42ea47b72da"
    Obtained hash (String)        : "4a8372945afa55c7dead800311272523ca19d42ea47b72da"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "856c19f86214ea9a8a2f0c4b758b973cce72a2d8ff55505c"
    Obtained hash (String)        : "856c19f86214ea9a8a2f0c4b758b973cce72a2d8ff55505c"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "7e29881ed05c915903dd5e24a8e81cde5d910142ae66207c"
    Obtained hash (String)        : "7e29881ed05c915903dd5e24a8e81cde5d910142ae66207c"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "e91960a06afbc8bd9f400a16135ed66e2745ef01d6d1cdf7"
    Obtained hash (String)        : "e91960a06afbc8bd9f400a16135ed66e2745ef01d6d1cdf7"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "2e2e581d725e799fda1948c75e85a28cfe1cf0c6324a1ada"
    Obtained hash (String)        : "2e2e581d725e799fda1948c75e85a28cfe1cf0c6324a1ada"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "e5c9f81ae0b31fc8780fc37cb63bb4ec96496f79a9b58344"
    Obtained hash (String)        : "e5c9f81ae0b31fc8780fc37cb63bb4ec96496f79a9b58344"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "c7c44bcc0f83946d6cba0ee6344ac0b7d80c38abce5d470f"
    Obtained hash (String)        : "c7c44bcc0f83946d6cba0ee6344ac0b7d80c38abce5d470f"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "228ee09bc7e36151c6f285f558e6aede66ad38c8341592b9"
    Obtained hash (String)        : "228ee09bc7e36151c6f285f558e6aede66ad38c8341592b9"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_4
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "e07219582e7bd97e86e4e2b7e8b405b7746c433e0364b929"
    Obtained hash (String)        : "e07219582e7bd97e86e4e2b7e8b405b7746c433e0364b929"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  5
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "4839d0626f95935e17ee2fc4509387bbe2cc46cb382ffe85"
    Obtained hash (String)        : "4839d0626f95935e17ee2fc4509387bbe2cc46cb382ffe85"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "5ffa3b3548a6e2cfc06b7908ceb5263595df67cf9c4b9341"
    Obtained hash (String)        : "5ffa3b3548a6e2cfc06b7908ceb5263595df67cf9c4b9341"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "d12091104555b00119a8d07808a3380bf9e60018915b9025"
    Obtained hash (String)        : "d12091104555b00119a8d07808a3380bf9e60018915b9025"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "8225efabaded623849843546cdf3c8c88e0fdca68f9a5a56"
    Obtained hash (String)        : "8225efabaded623849843546cdf3c8c88e0fdca68f9a5a56"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "85f1f1c0eca04330cf2de5c8c83cf85a611b696f793284de"
    Obtained hash (String)        : "85f1f1c0eca04330cf2de5c8c83cf85a611b696f793284de"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "d651c8ac45c9050810d9fd64fc919909900c4664be0336d0"
    Obtained hash (String)        : "d651c8ac45c9050810d9fd64fc919909900c4664be0336d0"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "0a60fce978d5777e5410c0b71b9053108265e3038f395b9f"
    Obtained hash (String)        : "0a60fce978d5777e5410c0b71b9053108265e3038f395b9f"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "023d045f75d4bf051fd6e50f7b7417bf9949c4b5d2b4b7ef"
    Obtained hash (String)        : "023d045f75d4bf051fd6e50f7b7417bf9949c4b5d2b4b7ef"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_192_5
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "863377553270363d208818b4ce1abf173e0a2eead045ffcb"
    Obtained hash (String)        : "863377553270363d208818b4ce1abf173e0a2eead045ffcb"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
--------------------------------------------------------------------------------
Test Case Number: 5
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 6
Description     : CryptAda HAVAL (224-bit) test vectors
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Number of passes:  3
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "c5aae9d47bffcaaf84a8c6e7ccacd60a0dd1932be7b1a192b9214b6d"
    Obtained hash (String)        : "c5aae9d47bffcaaf84a8c6e7ccacd60a0dd1932be7b1a192b9214b6d"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "731814ba5605c59b673e4caae4ad28eeb515b3abc2b198336794e17b"
    Obtained hash (String)        : "731814ba5605c59b673e4caae4ad28eeb515b3abc2b198336794e17b"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "5bc955220ba2346a948d2848eca37bdd5eca6ecca7b594bd32923fab"
    Obtained hash (String)        : "5bc955220ba2346a948d2848eca37bdd5eca6ecca7b594bd32923fab"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "edf3e4add009ee89ee8ab03c39a3c749d20a48319c50c3a83861c540"
    Obtained hash (String)        : "edf3e4add009ee89ee8ab03c39a3c749d20a48319c50c3a83861c540"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "06ae38ebc43db58bd6b1d477c7b4e01b85a1e7b19b0bd088e33b58d1"
    Obtained hash (String)        : "06ae38ebc43db58bd6b1d477c7b4e01b85a1e7b19b0bd088e33b58d1"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "939f7ed7801c1ce4b32bc74a4056eee6081c999ed246907adba880a7"
    Obtained hash (String)        : "939f7ed7801c1ce4b32bc74a4056eee6081c999ed246907adba880a7"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "0fe989b4633b10d7deffb1171d3134f9bead7a9dc5309f03fe2241cd"
    Obtained hash (String)        : "0fe989b4633b10d7deffb1171d3134f9bead7a9dc5309f03fe2241cd"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "e1d5792306f56b22419662b06d1885a66dca3eba01f53274c89aeaeb"
    Obtained hash (String)        : "e1d5792306f56b22419662b06d1885a66dca3eba01f53274c89aeaeb"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_3
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "5c3480a77e7269e705f77ffd7ae44e6d3a4b60bd2fdfcda5f93c459d"
    Obtained hash (String)        : "5c3480a77e7269e705f77ffd7ae44e6d3a4b60bd2fdfcda5f93c459d"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  4
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "3e56243275b3b81561750550e36fcd676ad2f5dd9e15f2e89e6ed78e"
    Obtained hash (String)        : "3e56243275b3b81561750550e36fcd676ad2f5dd9e15f2e89e6ed78e"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "742f1dbeeaf17f74960558b44f08aa98bdc7d967e6c0ab8f799b3ac1"
    Obtained hash (String)        : "742f1dbeeaf17f74960558b44f08aa98bdc7d967e6c0ab8f799b3ac1"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "124c43d2ba4884599d013e8c872bfea4c88b0b6bf6303974cbe04e68"
    Obtained hash (String)        : "124c43d2ba4884599d013e8c872bfea4c88b0b6bf6303974cbe04e68"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "86e52ecc72ccaec188c17033fafe8b652705fd6a7d9db2e0d10cab92"
    Obtained hash (String)        : "86e52ecc72ccaec188c17033fafe8b652705fd6a7d9db2e0d10cab92"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "a0ac696cdb2030fa67f6cc1d14613b1962a7b69b4378a9a1b9738796"
    Obtained hash (String)        : "a0ac696cdb2030fa67f6cc1d14613b1962a7b69b4378a9a1b9738796"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "3e63c95727e0cd85d42034191314401e42ab9063a94772647e3e8e0f"
    Obtained hash (String)        : "3e63c95727e0cd85d42034191314401e42ab9063a94772647e3e8e0f"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "3a37ae6d1069343bb62e1ab5222c19c3d48da344d01583963210384a"
    Obtained hash (String)        : "3a37ae6d1069343bb62e1ab5222c19c3d48da344d01583963210384a"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "dddd6689885f6db4ad91e35a35e1f4498446510df798d4fd54b8654f"
    Obtained hash (String)        : "dddd6689885f6db4ad91e35a35e1f4498446510df798d4fd54b8654f"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_4
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "45336db282b6b75589dd80320a7c14dd2c1111cd9ec86e88d53bac31"
    Obtained hash (String)        : "45336db282b6b75589dd80320a7c14dd2c1111cd9ec86e88d53bac31"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  5
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "4a0513c032754f5582a758d35917ac9adf3854219b39e3ac77d1837e"
    Obtained hash (String)        : "4a0513c032754f5582a758d35917ac9adf3854219b39e3ac77d1837e"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "67b3cb8d4068e3641fa4f156e03b52978b421947328bfb9168c7655d"
    Obtained hash (String)        : "67b3cb8d4068e3641fa4f156e03b52978b421947328bfb9168c7655d"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "8081027a500147c512e5f1055986674d746d92af4841abeb89da64ad"
    Obtained hash (String)        : "8081027a500147c512e5f1055986674d746d92af4841abeb89da64ad"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "877a7b891fce89036fc127756b07923ece3ba7c495922909cc89512e"
    Obtained hash (String)        : "877a7b891fce89036fc127756b07923ece3ba7c495922909cc89512e"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "1b360acff7806502b5d40c71d237cc0c40343d2000ae2f65cf487c94"
    Obtained hash (String)        : "1b360acff7806502b5d40c71d237cc0c40343d2000ae2f65cf487c94"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "180aed7f988266016719f60148ba2c9b4f5ec3b9758960fc735df274"
    Obtained hash (String)        : "180aed7f988266016719f60148ba2c9b4f5ec3b9758960fc735df274"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "55591d16852c9ef56bdac519790dfed8b0af1e719d531e20d65148da"
    Obtained hash (String)        : "55591d16852c9ef56bdac519790dfed8b0af1e719d531e20d65148da"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "03d953298c8e56b46385c6761cd4b2e377889a75c97eaea475421c73"
    Obtained hash (String)        : "03d953298c8e56b46385c6761cd4b2e377889a75c97eaea475421c73"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_224_5
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "6d6e3b90b943a7990bf98ce9f8c13cd4c7c7fefc40c377bac19ed4a2"
    Obtained hash (String)        : "6d6e3b90b943a7990bf98ce9f8c13cd4c7c7fefc40c377bac19ed4a2"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
--------------------------------------------------------------------------------
Test Case Number: 6
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 7
Description     : CryptAda HAVAL (256-bit) test vectors
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Number of passes:  3
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "4f6938531f0bc8991f62da7bbd6f7de3fad44562b8c6f4ebf146d5b4e46f7c17"
    Obtained hash (String)        : "4f6938531f0bc8991f62da7bbd6f7de3fad44562b8c6f4ebf146d5b4e46f7c17"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "47c838fbb4081d9525a0ff9b1e2c05a98f625714e72db289010374e27db021d8"
    Obtained hash (String)        : "47c838fbb4081d9525a0ff9b1e2c05a98f625714e72db289010374e27db021d8"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "8699f1e3384d05b2a84b032693e2b6f46df85a13a50d93808d6874bb8fb9e86c"
    Obtained hash (String)        : "8699f1e3384d05b2a84b032693e2b6f46df85a13a50d93808d6874bb8fb9e86c"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "911d1aad699e1b4a3a0e783bd5e68ba45392cc4915b1a17eca8a49da70879912"
    Obtained hash (String)        : "911d1aad699e1b4a3a0e783bd5e68ba45392cc4915b1a17eca8a49da70879912"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "72fad4bde1da8c8332fb60561a780e7f504f21547b98686824fc33fc796afa76"
    Obtained hash (String)        : "72fad4bde1da8c8332fb60561a780e7f504f21547b98686824fc33fc796afa76"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "899397d96489281e9e76d5e65abab751f312e06c06c07c9c1d42abd31bb6a404"
    Obtained hash (String)        : "899397d96489281e9e76d5e65abab751f312e06c06c07c9c1d42abd31bb6a404"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "29911201fc26e68ddfedd0fd5172c0af1f05b0a7ae2f027a04cbceb3be69f632"
    Obtained hash (String)        : "29911201fc26e68ddfedd0fd5172c0af1f05b0a7ae2f027a04cbceb3be69f632"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "9446028f42b3768a41bd873ca69b0c006341d986613567f39eb61f96ca683300"
    Obtained hash (String)        : "9446028f42b3768a41bd873ca69b0c006341d986613567f39eb61f96ca683300"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_3
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "4d011ff4978d444b2778ff45be4ccfa5ade53882ea20769019e6a3dd9882e161"
    Obtained hash (String)        : "4d011ff4978d444b2778ff45be4ccfa5ade53882ea20769019e6a3dd9882e161"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  4
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "c92b2e23091e80e375dadce26982482d197b1a2521be82da819f8ca2c579b99b"
    Obtained hash (String)        : "c92b2e23091e80e375dadce26982482d197b1a2521be82da819f8ca2c579b99b"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "e686d2394a49b44d306ece295cf9021553221db132b36cc0ff5b593d39295899"
    Obtained hash (String)        : "e686d2394a49b44d306ece295cf9021553221db132b36cc0ff5b593d39295899"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "8f409f1bb6b30c5016fdce55f652642261575bedca0b9533f32f5455459142b5"
    Obtained hash (String)        : "8f409f1bb6b30c5016fdce55f652642261575bedca0b9533f32f5455459142b5"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "dbcc8e1011df45121d4ff2bb62c6c38949d76084f829c36d5929aee71b261f2f"
    Obtained hash (String)        : "dbcc8e1011df45121d4ff2bb62c6c38949d76084f829c36d5929aee71b261f2f"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "124f6eb645dc407637f8f719cc31250089c89903bf1db8fac21ea4614df4e99a"
    Obtained hash (String)        : "124f6eb645dc407637f8f719cc31250089c89903bf1db8fac21ea4614df4e99a"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "46a3a1dfe867ede652425ccd7fe8006537ead26372251686bea286da152dc35a"
    Obtained hash (String)        : "46a3a1dfe867ede652425ccd7fe8006537ead26372251686bea286da152dc35a"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "2187a29f8d4539010a3b91407304f74a0fc30325d91fd3c6bb585cbc45546543"
    Obtained hash (String)        : "2187a29f8d4539010a3b91407304f74a0fc30325d91fd3c6bb585cbc45546543"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "c0d4c6ea514105fd1a9c38a238553fb7fa21d4127eb1a3035a75ce9d06a83d96"
    Obtained hash (String)        : "c0d4c6ea514105fd1a9c38a238553fb7fa21d4127eb1a3035a75ce9d06a83d96"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_4
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "d5af6e503f2380ad5e934b9250cbed30d3617de5fdb9a954c69fc7b920244859"
    Obtained hash (String)        : "d5af6e503f2380ad5e934b9250cbed30d3617de5fdb9a954c69fc7b920244859"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Number of passes:  5
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "be417bb4dd5cfb76c7126f4f8eeb1553a449039307b1a3cd451dbfdc0fbbe330"
    Obtained hash (String)        : "be417bb4dd5cfb76c7126f4f8eeb1553a449039307b1a3cd451dbfdc0fbbe330"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "de8fd5ee72a5e4265af0a756f4e1a1f65c9b2b2f47cf17ecf0d1b88679a3e22f"
    Obtained hash (String)        : "de8fd5ee72a5e4265af0a756f4e1a1f65c9b2b2f47cf17ecf0d1b88679a3e22f"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "976cd6254c337969e5913b158392a2921af16fca51f5601d486e0a9de01156e7"
    Obtained hash (String)        : "976cd6254c337969e5913b158392a2921af16fca51f5601d486e0a9de01156e7"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "7ccf22af7f99acd6ac84f176041329e2958fde1419a259d5a4b89d8f4115ad74"
    Obtained hash (String)        : "7ccf22af7f99acd6ac84f176041329e2958fde1419a259d5a4b89d8f4115ad74"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "c9c7d8afa159fd9e965cb83ff5ee6f58aeda352c0eff005548153a61551c38ee"
    Obtained hash (String)        : "c9c7d8afa159fd9e965cb83ff5ee6f58aeda352c0eff005548153a61551c38ee"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "b45cb6e62f2b1320e4f8f1b0b273d45add47c321fd23999dcf403ac37636d963"
    Obtained hash (String)        : "b45cb6e62f2b1320e4f8f1b0b273d45add47c321fd23999dcf403ac37636d963"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "68e57a72ad513af517469a96a0073ce212b42e772671687de3dfce4ff8cde9bf"
    Obtained hash (String)        : "68e57a72ad513af517469a96a0073ce212b42e772671687de3dfce4ff8cde9bf"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "b89c551cdfe2e06dbd4cea2be1bc7d557416c58ebb4d07cbc94e49f710c55be4"
    Obtained hash (String)        : "b89c551cdfe2e06dbd4cea2be1bc7d557416c58ebb4d07cbc94e49f710c55be4"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_HAVAL_256_5
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "c60fe005462f2371869f11a456569bac0627edc14ffc760fb12fe64ee3bbe120"
    Obtained hash (String)        : "c60fe005462f2371869f11a456569bac0627edc14ffc760fb12fe64ee3bbe120"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
--------------------------------------------------------------------------------
Test Case Number: 7
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 8
Description     : Testing HAVAL operation (128-bit) at counter offset and block boundary.
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Checking at counter offset boundary.
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "38171266657f3537d8fd0161de586787"
    Obtained hash (String)        : "38171266657f3537d8fd0161de586787"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "1065c6b9296279e1286c9b248bcf3208"
    Obtained hash (String)        : "1065c6b9296279e1286c9b248bcf3208"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "dec9fa29cfebf302bc06181962c82c88"
    Obtained hash (String)        : "dec9fa29cfebf302bc06181962c82c88"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "5f044045f2c4ab9d33d5edcf3f4cb4a6"
    Obtained hash (String)        : "5f044045f2c4ab9d33d5edcf3f4cb4a6"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "2e6181228660bde07d7c235b28a39599"
    Obtained hash (String)        : "2e6181228660bde07d7c235b28a39599"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "dc7daf4374da9b19d33ed11891e4211d"
    Obtained hash (String)        : "dc7daf4374da9b19d33ed11891e4211d"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "8843b4b1638a357f45af6a5fef9ae694"
    Obtained hash (String)        : "8843b4b1638a357f45af6a5fef9ae694"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "337fea6400d4d7955b61558c96bfebad"
    Obtained hash (String)        : "337fea6400d4d7955b61558c96bfebad"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "637f998895180a849ae720819ffb7b74"
    Obtained hash (String)        : "637f998895180a849ae720819ffb7b74"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "73b9f78088014e590f8e85bd1613074b"
    Obtained hash (String)        : "73b9f78088014e590f8e85bd1613074b"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "f9974bd9089cadfc82971b5b72073c05"
    Obtained hash (String)        : "f9974bd9089cadfc82971b5b72073c05"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "654b6dae7483100ef1d66e15c3b187f3"
    Obtained hash (String)        : "654b6dae7483100ef1d66e15c3b187f3"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "48c85afbe8b16e2443050a19d2c435f2"
    Obtained hash (String)        : "48c85afbe8b16e2443050a19d2c435f2"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "8b2a2e2181a632ceda0ff65f85bc2bff"
    Obtained hash (String)        : "8b2a2e2181a632ceda0ff65f85bc2bff"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "afbea75cea75a9f0ed2aae942d7ca20b"
    Obtained hash (String)        : "afbea75cea75a9f0ed2aae942d7ca20b"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "eb7880cc66c8a2ca21b0a84268216797"
    Obtained hash (String)        : "eb7880cc66c8a2ca21b0a84268216797"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "9d3fe30a4303bd15f0924b9c30e32f54"
    Obtained hash (String)        : "9d3fe30a4303bd15f0924b9c30e32f54"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "8c24c61709b9e6484ad6b14dee80a63f"
    Obtained hash (String)        : "8c24c61709b9e6484ad6b14dee80a63f"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
--------------------------------------------------------------------------------
Test Case Number: 8
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 9
Description     : Testing HAVAL operation (160-bit) at counter offset and block boundary.
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Checking at counter offset boundary.
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "4dd612a8f80deeb21fa477013cd0d0768a01738d"
    Obtained hash (String)        : "4dd612a8f80deeb21fa477013cd0d0768a01738d"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "cd242e07136ddaa04e2de8feed86fd705a68d9df"
    Obtained hash (String)        : "cd242e07136ddaa04e2de8feed86fd705a68d9df"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "85452238ed0279fd3bb37a02112f23ec627aa2ae"
    Obtained hash (String)        : "85452238ed0279fd3bb37a02112f23ec627aa2ae"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "74d7e61e2e4e0f6598f0dc1caf79615f9f263f6c"
    Obtained hash (String)        : "74d7e61e2e4e0f6598f0dc1caf79615f9f263f6c"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "a358a7632b9c455e4515a4a319077b8bfa4af60d"
    Obtained hash (String)        : "a358a7632b9c455e4515a4a319077b8bfa4af60d"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "990b597b8035f9368659818ae5142e3f474c3beb"
    Obtained hash (String)        : "990b597b8035f9368659818ae5142e3f474c3beb"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "5bf719110345cade348e23846b367dee1c0a2fff"
    Obtained hash (String)        : "5bf719110345cade348e23846b367dee1c0a2fff"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "7e02e58c80c983c143df0fa048dde7bfb64db9a9"
    Obtained hash (String)        : "7e02e58c80c983c143df0fa048dde7bfb64db9a9"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "5dc7621cac3d399298a776f2405892ecdfc9dc32"
    Obtained hash (String)        : "5dc7621cac3d399298a776f2405892ecdfc9dc32"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "c07c793852c4afe251eba5d9858186ffb3755f61"
    Obtained hash (String)        : "c07c793852c4afe251eba5d9858186ffb3755f61"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "3867dc7ca479ba3b72e64af7d943a3c91b2aca90"
    Obtained hash (String)        : "3867dc7ca479ba3b72e64af7d943a3c91b2aca90"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "afc2c056cd3de91a8ce37a6874023acb7f5e8005"
    Obtained hash (String)        : "afc2c056cd3de91a8ce37a6874023acb7f5e8005"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "98937e0c7ca2b966a7052cc5c05c3f1c312081ec"
    Obtained hash (String)        : "98937e0c7ca2b966a7052cc5c05c3f1c312081ec"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "3c75457a2fc56cb0ee9b8bdbb66955cbf69a0e01"
    Obtained hash (String)        : "3c75457a2fc56cb0ee9b8bdbb66955cbf69a0e01"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "12da1e932588687ff9f21bf8484e581a62c2e8fe"
    Obtained hash (String)        : "12da1e932588687ff9f21bf8484e581a62c2e8fe"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "8a78081d4612204cae59351adeace1c92caf926f"
    Obtained hash (String)        : "8a78081d4612204cae59351adeace1c92caf926f"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "41de0fd9b411bfd979a67da6c0ec22adcef1d7c1"
    Obtained hash (String)        : "41de0fd9b411bfd979a67da6c0ec22adcef1d7c1"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "88224cc0bbd89d2a15cc663ba9c9820019ed18f2"
    Obtained hash (String)        : "88224cc0bbd89d2a15cc663ba9c9820019ed18f2"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
--------------------------------------------------------------------------------
Test Case Number: 9
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 10
Description     : Testing HAVAL operation (192-bit) at counter offset and block boundary.
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Checking at counter offset boundary.
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "d7bde85eb8f0a4fb44d39802ec295fa58918d3dfbc0bebdc"
    Obtained hash (String)        : "d7bde85eb8f0a4fb44d39802ec295fa58918d3dfbc0bebdc"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "ccf65b0de7ef20fb6b833b11c107d803701a0891d10b3cb7"
    Obtained hash (String)        : "ccf65b0de7ef20fb6b833b11c107d803701a0891d10b3cb7"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "ddd88ec36fbe72a4907754b573ec66e782769c732dc6760d"
    Obtained hash (String)        : "ddd88ec36fbe72a4907754b573ec66e782769c732dc6760d"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "e782e65f2d5775662583643eb97d797703fab1f101e1a0c0"
    Obtained hash (String)        : "e782e65f2d5775662583643eb97d797703fab1f101e1a0c0"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "5f6401d3845f254e3e62462bbf178ed86d5a13831d3ed900"
    Obtained hash (String)        : "5f6401d3845f254e3e62462bbf178ed86d5a13831d3ed900"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "be832389220598cc5a18498d126a48b1e12c1503fd4670ea"
    Obtained hash (String)        : "be832389220598cc5a18498d126a48b1e12c1503fd4670ea"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "7b92b59f18edd4bd3bf889bee24df108a5e4cf4455046f8d"
    Obtained hash (String)        : "7b92b59f18edd4bd3bf889bee24df108a5e4cf4455046f8d"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "035254e8f37b30c875d987ecae0a3a5528d20165fcf5dab1"
    Obtained hash (String)        : "035254e8f37b30c875d987ecae0a3a5528d20165fcf5dab1"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "e3fbb513c443dcfea0cad1c4b624104a2f5560582fbbd36d"
    Obtained hash (String)        : "e3fbb513c443dcfea0cad1c4b624104a2f5560582fbbd36d"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "2baf732ba73ebc6cc39254f3162e4dbe3a27ecb3c8ba19b9"
    Obtained hash (String)        : "2baf732ba73ebc6cc39254f3162e4dbe3a27ecb3c8ba19b9"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "0183da9ae8d79b60210417a0ba962b2819057e7eb9af809f"
    Obtained hash (String)        : "0183da9ae8d79b60210417a0ba962b2819057e7eb9af809f"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "b043becfa37ffc984123e022cb747ad2b80430c663b35aae"
    Obtained hash (String)        : "b043becfa37ffc984123e022cb747ad2b80430c663b35aae"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "3234102d0b5d56e9233c6c7552e574dfee7b09f34b92845b"
    Obtained hash (String)        : "3234102d0b5d56e9233c6c7552e574dfee7b09f34b92845b"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "3ca329b6070e5aad9a73f57f1a4a7626d0ae68b594cbc6a3"
    Obtained hash (String)        : "3ca329b6070e5aad9a73f57f1a4a7626d0ae68b594cbc6a3"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "bdbaf7560124a7e77dfd45c6ad15ccec2291f980ba97c882"
    Obtained hash (String)        : "bdbaf7560124a7e77dfd45c6ad15ccec2291f980ba97c882"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "e59c7499e2edbde84eaa4f3bc2f0e7cd17c9866132a22b23"
    Obtained hash (String)        : "e59c7499e2edbde84eaa4f3bc2f0e7cd17c9866132a22b23"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "bb86c5f1bef9d13702f4afd16474d95f82c5dc0dd796f4ce"
    Obtained hash (String)        : "bb86c5f1bef9d13702f4afd16474d95f82c5dc0dd796f4ce"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "eb91837ddd84852333c3633385da019556b4aed76140ea29"
    Obtained hash (String)        : "eb91837ddd84852333c3633385da019556b4aed76140ea29"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
--------------------------------------------------------------------------------
Test Case Number: 10
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 11
Description     : Testing HAVAL operation (224-bit) at counter offset and block boundary.
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Checking at counter offset boundary.
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "365601a3c875aeae81f92d0029f1c8ab837148dae077e28fd0a192ea"
    Obtained hash (String)        : "365601a3c875aeae81f92d0029f1c8ab837148dae077e28fd0a192ea"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "4d37a1750d21d97bd6630181aee196bd3a4489eec647238d940aff9f"
    Obtained hash (String)        : "4d37a1750d21d97bd6630181aee196bd3a4489eec647238d940aff9f"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "8df2687205636d7b4e0ea980a5cd1fbc59cfc41873effc24d4645416"
    Obtained hash (String)        : "8df2687205636d7b4e0ea980a5cd1fbc59cfc41873effc24d4645416"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "749b687606abd9a0df42cfd8b0838d3bbf45cfb3bb4eb69953b3e64d"
    Obtained hash (String)        : "749b687606abd9a0df42cfd8b0838d3bbf45cfb3bb4eb69953b3e64d"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "c53ef41dd3a5095d7e3c45d34182f5c4d29c2d28b928a70524246663"
    Obtained hash (String)        : "c53ef41dd3a5095d7e3c45d34182f5c4d29c2d28b928a70524246663"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "0d4d57845a8a63b3c5975403c7f2543cf906799d615a007965277dcf"
    Obtained hash (String)        : "0d4d57845a8a63b3c5975403c7f2543cf906799d615a007965277dcf"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "1e4250a6333e3e6a0b9db0e620a359437ab67bf1f49dc9d8e17b1c98"
    Obtained hash (String)        : "1e4250a6333e3e6a0b9db0e620a359437ab67bf1f49dc9d8e17b1c98"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "1787a093aaebbd9110001a8113ab44e129971cbf1e69563926747b94"
    Obtained hash (String)        : "1787a093aaebbd9110001a8113ab44e129971cbf1e69563926747b94"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "5691ba7d5597157a47b981e51864a58edd093a3e787f911c88059e09"
    Obtained hash (String)        : "5691ba7d5597157a47b981e51864a58edd093a3e787f911c88059e09"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "b8a13caa59cbe0dbf34eec693d04be7ba9c7252d043551986233172a"
    Obtained hash (String)        : "b8a13caa59cbe0dbf34eec693d04be7ba9c7252d043551986233172a"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "a622f22bf634e556d519a4e5bf5b54e47aa3f58a27b8fa612cdfe1a8"
    Obtained hash (String)        : "a622f22bf634e556d519a4e5bf5b54e47aa3f58a27b8fa612cdfe1a8"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "5002c7d93d34b3c84fb297009a8406b460243db5a16fa6bb1df65021"
    Obtained hash (String)        : "5002c7d93d34b3c84fb297009a8406b460243db5a16fa6bb1df65021"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "05fc29af9765d1bb0419dcdb58399b5bd14dcf33a5241e76c942c910"
    Obtained hash (String)        : "05fc29af9765d1bb0419dcdb58399b5bd14dcf33a5241e76c942c910"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "46e51232728069555880d30ecc8c29c78e3465023e6be20ee08b65fe"
    Obtained hash (String)        : "46e51232728069555880d30ecc8c29c78e3465023e6be20ee08b65fe"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "f97c85db6f8c00cff823a7c3ee721212d52ae847b22289347506570a"
    Obtained hash (String)        : "f97c85db6f8c00cff823a7c3ee721212d52ae847b22289347506570a"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "7c2eeb49811fe1a129f4c18c82950c26f943cd4dc8a1db2aec8800a1"
    Obtained hash (String)        : "7c2eeb49811fe1a129f4c18c82950c26f943cd4dc8a1db2aec8800a1"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "8d80627658498ad9cd535eee5f667c54edcfb9fa71e753ff011f7887"
    Obtained hash (String)        : "8d80627658498ad9cd535eee5f667c54edcfb9fa71e753ff011f7887"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "3e6bfe77e8b9be093f025a7edf9b04dbd2e9826fdfd629348384ba42"
    Obtained hash (String)        : "3e6bfe77e8b9be093f025a7edf9b04dbd2e9826fdfd629348384ba42"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
--------------------------------------------------------------------------------
Test Case Number: 11
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 12
Description     : Testing HAVAL operation (256-bit) at counter offset and block boundary.
Started         : 2017/03/22 - 19:49:35
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Checking at counter offset boundary.
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "3973ff8c2014d772f2999001c0a264543d1e1e8a968a5e32f81e37650583f639"
    Obtained hash (String)        : "3973ff8c2014d772f2999001c0a264543d1e1e8a968a5e32f81e37650583f639"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "712f49ede266ce71c1421c5c90b898d20d96ee712b2c139fc7ff1830919f44f9"
    Obtained hash (String)        : "712f49ede266ce71c1421c5c90b898d20d96ee712b2c139fc7ff1830919f44f9"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "0455661f2f02a015d9cf3c411af0509080124a7e628b84ec33e68432e88d7cd2"
    Obtained hash (String)        : "0455661f2f02a015d9cf3c411af0509080124a7e628b84ec33e68432e88d7cd2"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "475d868cb5a11fd207e681b8146cf7fe6b68cde2fa7c203f0f2336991e914052"
    Obtained hash (String)        : "475d868cb5a11fd207e681b8146cf7fe6b68cde2fa7c203f0f2336991e914052"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "6907fab59d149a718475b31c472d868038c4bb37ea8c44af442984d016ab0e05"
    Obtained hash (String)        : "6907fab59d149a718475b31c472d868038c4bb37ea8c44af442984d016ab0e05"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "07ea6d567c1e222dc2cd5ace86311c15f028ae6469ae51247d2b8749d979877c"
    Obtained hash (String)        : "07ea6d567c1e222dc2cd5ace86311c15f028ae6469ae51247d2b8749d979877c"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  117
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 936,  0)
    Obtained bit count (Low, High): ( 936,  0)
    Expected hash (String)        : "5ccc1fcc4aca9ab3a014732dbafee7ed7c0cf1028b4bbaffe92a9d78e634ee02"
    Obtained hash (String)        : "5ccc1fcc4aca9ab3a014732dbafee7ed7c0cf1028b4bbaffe92a9d78e634ee02"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  118
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 944,  0)
    Obtained bit count (Low, High): ( 944,  0)
    Expected hash (String)        : "34e1b82fdea5bf0d5eec513d8bc463d2eeab36a2af5f5183cc98b564e51431b0"
    Obtained hash (String)        : "34e1b82fdea5bf0d5eec513d8bc463d2eeab36a2af5f5183cc98b564e51431b0"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  119
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 952,  0)
    Obtained bit count (Low, High): ( 952,  0)
    Expected hash (String)        : "e317fa1b993386e8e4c38f6a9a3bb4ae1f903d00df13d16a86f13fbb68a11a28"
    Obtained hash (String)        : "e317fa1b993386e8e4c38f6a9a3bb4ae1f903d00df13d16a86f13fbb68a11a28"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Number of passes:  3
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "14b6e3418a669865cd25c413c8fbdf680e3420b563a468845271674405f52abd"
    Obtained hash (String)        : "14b6e3418a669865cd25c413c8fbdf680e3420b563a468845271674405f52abd"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "13faa4d94db48282d58e05b69be23ec24d1bf5c724dfdd7f2a1c17763f3d355f"
    Obtained hash (String)        : "13faa4d94db48282d58e05b69be23ec24d1bf5c724dfdd7f2a1c17763f3d355f"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "18229631aea1373425523a5e9a11aa8545c98376ebd07525f5f33aaed88bce50"
    Obtained hash (String)        : "18229631aea1373425523a5e9a11aa8545c98376ebd07525f5f33aaed88bce50"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  4
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "6380e8e8e2f3907f314fcddb51f48e3a55b0130a6bba01eec3c2b90e195e554e"
    Obtained hash (String)        : "6380e8e8e2f3907f314fcddb51f48e3a55b0130a6bba01eec3c2b90e195e554e"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "f30bc5d2ae4d446523b50f780111b79eb5caeceb0a4e6981638e539709776b99"
    Obtained hash (String)        : "f30bc5d2ae4d446523b50f780111b79eb5caeceb0a4e6981638e539709776b99"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "2acd67570c738a5a5f19eaaf2e9dd0202dfcd0e8e0129b742f1deda7a929eb0e"
    Obtained hash (String)        : "2acd67570c738a5a5f19eaaf2e9dd0202dfcd0e8e0129b742f1deda7a929eb0e"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Number of passes:  5
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "f7eabeec467c8b56af40f90e799ea878d8ea7eff260d49982209364ad0e0c39d"
    Obtained hash (String)        : "f7eabeec467c8b56af40f90e799ea878d8ea7eff260d49982209364ad0e0c39d"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "93390552a2d23df530a5918c95d095e3914cf476cd1d95bede099c7674b31efe"
    Obtained hash (String)        : "93390552a2d23df530a5918c95d095e3914cf476cd1d95bede099c7674b31efe"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "a084bcc569ed32e30bb0c79e7b4f82be98c3934d2333ea7f6757c726382d6688"
    Obtained hash (String)        : "a084bcc569ed32e30bb0c79e7b4f82be98c3934d2333ea7f6757c726382d6688"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
--------------------------------------------------------------------------------
Test Case Number: 12
Test Case Result: PASSED
Finished        : 2017/03/22 - 19:49:35
--[End Test Case]---------------------------------------------------------------

================================================================================
CryptAda Test Driver End
CryptAda Test Driver Name: CryptAda.Tests.Unit.HAVAL
Finished                 : 2017/03/22 - 19:49:35
================================================================================
