================================================================================
TCantos Ada Cryptography Library (CryptAda)
Version: 0.1.d (2017/04/30)
Copyright (c) 2017, Antonio Duran
================================================================================
CryptAda Test Driver Begin
CryptAda Test Driver Name: CryptAda.Tests.Unit.MD_SHA_384
Description              : Unit test driver for CryptAda.Digests.Message_Digests.SHA_384 functionality.
Started                  : 2017/05/23 - 08:18:23
================================================================================

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 1
Description     : Getting a handle for message digest objects
Started         : 2017/05/23 - 08:18:23
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Get_Message_Digest_Handle
    - Is_Valid_Handle
    - Invalidate_Handle
    - Get_Message_Digest_Ptr
[I] Before Get_Message_Digest_Handle the handle is invalid:
[I] Handle is invalid
[I] Getting a pointer from an invalid handle will return null
[I] Pointer is null
[I] Trying any operation with a null pointer will raise Constraint_Error
    Trying Digest_Start
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-md_sha_384.adb:198 access check failed"
[I] Getting a message digest handle
[I] Information on handle BEFORE calling Get_Message_Digest_Handle
    Invalid Message_Digest_Handle
[I] Information on handle AFTER calling Get_Message_Digest_Handle
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#00000000000000000000000000000000#
[I] Now the handle must be invalid:
[I] Handle is valid
[I] Getting a pointer from an invalid handle will return a not null value
[I] Pointer is not null
[I] Computing a hash value may succeed
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#00000000000000000000000000000000#
[I] Calling Digest_Update
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest information AFTER Digest_Update
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#000000000000000000000000000000E0#
[I] Calling Digest_End to finish processing and obtaining the computed Hash
[I] Digest information AFTER Digest_End
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#000000000000000000000000000000E0#
[I] Checking digest computation results
[I] Expected hash
    - Hash size :  48
    - Hash bytes:
16#47#, 16#41#, 16#88#, 16#5C#, 16#0A#, 16#C8#, 16#1D#, 16#FE#, 16#BC#, 16#61#, 16#2D#, 16#A4#, 16#F9#, 16#6C#, 16#5F#, 16#74#, 
16#8E#, 16#6F#, 16#E1#, 16#8F#, 16#6A#, 16#20#, 16#EA#, 16#F6#, 16#D8#, 16#29#, 16#B1#, 16#F6#, 16#09#, 16#53#, 16#C6#, 16#E7#, 
16#74#, 16#F3#, 16#D7#, 16#A2#, 16#AA#, 16#1C#, 16#F0#, 16#F9#, 16#83#, 16#3F#, 16#90#, 16#77#, 16#25#, 16#38#, 16#0A#, 16#AD#
[I] Obtained hash
    - Hash size :  48
    - Hash bytes:
16#47#, 16#41#, 16#88#, 16#5C#, 16#0A#, 16#C8#, 16#1D#, 16#FE#, 16#BC#, 16#61#, 16#2D#, 16#A4#, 16#F9#, 16#6C#, 16#5F#, 16#74#, 
16#8E#, 16#6F#, 16#E1#, 16#8F#, 16#6A#, 16#20#, 16#EA#, 16#F6#, 16#D8#, 16#29#, 16#B1#, 16#F6#, 16#09#, 16#53#, 16#C6#, 16#E7#, 
16#74#, 16#F3#, 16#D7#, 16#A2#, 16#AA#, 16#1C#, 16#F0#, 16#F9#, 16#83#, 16#3F#, 16#90#, 16#77#, 16#25#, 16#38#, 16#0A#, 16#AD#
[I] Results match
[I] Invalidating handle
[I] Digest information AFTER invalidating handle
    Invalid Message_Digest_Handle
[I] Handle is invalid
[I] Using a pointer from an invalid handle must result in an exception
    Trying Digest_Start
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-md_sha_384.adb:281 access check failed"
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 1
Test Case Result: PASSED
Finished        : 2017/05/23 - 08:18:23
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 2
Description     : Testing default Digest_Start
Started         : 2017/05/23 - 08:18:23
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Digest_Start
[I] Default Digest_Start will start digest computation with default parameters
    SHA_384 is not parametrizable
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#00000000000000000000000000000000#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#00000000000000000000000000000000#
[I] Calling Digest_Update
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest information AFTER Digest_Update
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#000000000000000000000000000000E0#
[I] Calling Digest_End to finish processing and obtaining the computed Hash
[I] Digest information AFTER Digest_End
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#000000000000000000000000000000E0#
[I] AFTER Digest_End, bit counter is not set to 0
[I] Checking digest computation results
[I] Expected hash
    - Hash size :  48
    - Hash bytes:
16#47#, 16#41#, 16#88#, 16#5C#, 16#0A#, 16#C8#, 16#1D#, 16#FE#, 16#BC#, 16#61#, 16#2D#, 16#A4#, 16#F9#, 16#6C#, 16#5F#, 16#74#, 
16#8E#, 16#6F#, 16#E1#, 16#8F#, 16#6A#, 16#20#, 16#EA#, 16#F6#, 16#D8#, 16#29#, 16#B1#, 16#F6#, 16#09#, 16#53#, 16#C6#, 16#E7#, 
16#74#, 16#F3#, 16#D7#, 16#A2#, 16#AA#, 16#1C#, 16#F0#, 16#F9#, 16#83#, 16#3F#, 16#90#, 16#77#, 16#25#, 16#38#, 16#0A#, 16#AD#
[I] Obtained hash
    - Hash size :  48
    - Hash bytes:
16#47#, 16#41#, 16#88#, 16#5C#, 16#0A#, 16#C8#, 16#1D#, 16#FE#, 16#BC#, 16#61#, 16#2D#, 16#A4#, 16#F9#, 16#6C#, 16#5F#, 16#74#, 
16#8E#, 16#6F#, 16#E1#, 16#8F#, 16#6A#, 16#20#, 16#EA#, 16#F6#, 16#D8#, 16#29#, 16#B1#, 16#F6#, 16#09#, 16#53#, 16#C6#, 16#E7#, 
16#74#, 16#F3#, 16#D7#, 16#A2#, 16#AA#, 16#1C#, 16#F0#, 16#F9#, 16#83#, 16#3F#, 16#90#, 16#77#, 16#25#, 16#38#, 16#0A#, 16#AD#
[I] Results match
[I] Digest_Start resets bit counter to 0
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#000000000000000000000000000000E0#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#00000000000000000000000000000000#
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 2
Test Case Result: PASSED
Finished        : 2017/05/23 - 08:18:23
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 3
Description     : Testing parametrized Digest_Start
Started         : 2017/05/23 - 08:18:23
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Digest_Start(Parameter_List)
[I] SHA_384 does not accept any parameter. So any valid Parameter list is ignored
[I] Trying Digest_Start with an empty list: ()
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#00000000000000000000000000000000#
[I] Trying Digest_Start with the list: (Hello,World)
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : 16#00000000000000000000000000000000#
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 3
Test Case Result: PASSED
Finished        : 2017/05/23 - 08:18:23
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 4
Description     : Standard SHA-1 test vectors
Started         : 2017/05/23 - 08:18:23
--------------------------------------------------------------------------------
[I] Standard test vectors obtained from http://www.di-mgt.com.au/sha_testvectors.html
    Number of vectors to test:  4
[I] Computing hash for a test vector:
    Hash algorithm                : MD_SHA_384
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results
    Expected bit count            : 16#00000000000000000000000000000000#
    Obtained bit count            : 16#00000000000000000000000000000000#
    Expected hash (String)        : "38B060A751AC96384CD9327EB1B1E36A21FDB71114BE07434C0CC7BF63F6E1DA274EDEBFE76F65FBD51AD2F14898B95B"
    Obtained hash (String)        : "38B060A751AC96384CD9327EB1B1E36A21FDB71114BE07434C0CC7BF63F6E1DA274EDEBFE76F65FBD51AD2F14898B95B"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for a test vector:
    Hash algorithm                : MD_SHA_384
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results
    Expected bit count            : 16#00000000000000000000000000000018#
    Obtained bit count            : 16#00000000000000000000000000000018#
    Expected hash (String)        : "CB00753F45A35E8BB5A03D699AC65007272C32AB0EDED1631A8B605A43FF5BED8086072BA1E7CC2358BAECA134C825A7"
    Obtained hash (String)        : "CB00753F45A35E8BB5A03D699AC65007272C32AB0EDED1631A8B605A43FF5BED8086072BA1E7CC2358BAECA134C825A7"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for a test vector:
    Hash algorithm                : MD_SHA_384
    Vector string                 : "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"
    Vector length                 :  56
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#62#, 16#63#, 16#64#, 16#65#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#64#, 16#65#, 16#66#, 16#67#, 16#65#, 16#66#, 16#67#, 16#68#, 
16#66#, 16#67#, 16#68#, 16#69#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#68#, 16#69#, 
16#6A#, 16#6B#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#6E#, 16#6F#, 16#70#, 16#71#
[I] Digest results
    Expected bit count            : 16#000000000000000000000000000001C0#
    Obtained bit count            : 16#000000000000000000000000000001C0#
    Expected hash (String)        : "3391FDDDFC8DC7393707A65B1B4709397CF8B1D162AF05ABFE8F450DE5F36BC6B0455A8520BC4E6F5FE95B1FE3C8452B"
    Obtained hash (String)        : "3391FDDDFC8DC7393707A65B1B4709397CF8B1D162AF05ABFE8F450DE5F36BC6B0455A8520BC4E6F5FE95B1FE3C8452B"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for a test vector:
    Hash algorithm                : MD_SHA_384
    Vector string                 : "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"
    Vector length                 :  112
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#62#, 16#63#, 
16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#63#, 16#64#, 16#65#, 16#66#, 
16#67#, 16#68#, 16#69#, 16#6A#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 
16#6A#, 16#6B#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 
16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#67#, 16#68#, 
16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#68#, 16#69#, 16#6A#, 16#6B#, 
16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#6C#, 16#6D#, 
16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 
16#71#, 16#72#, 16#73#, 16#74#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 
16#74#, 16#75#
[I] Digest results
    Expected bit count            : 16#00000000000000000000000000000380#
    Obtained bit count            : 16#00000000000000000000000000000380#
    Expected hash (String)        : "09330C33F71147E83D192FC782CD1B4753111B173B3B05D22FA08086E3B0F712FCC7C71A557E2DB966C3E9FA91746039"
    Obtained hash (String)        : "09330C33F71147E83D192FC782CD1B4753111B173B3B05D22FA08086E3B0F712FCC7C71A557E2DB966C3E9FA91746039"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 4
Test Case Result: PASSED
Finished        : 2017/05/23 - 08:18:23
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 5
Description     : CryptAda SHA-1 test vectors
Started         : 2017/05/23 - 08:18:23
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count            : 16#00000000000000000000000000000000#
    Obtained bit count            : 16#00000000000000000000000000000000#
    Expected hash (String)        : "38B060A751AC96384CD9327EB1B1E36A21FDB71114BE07434C0CC7BF63F6E1DA274EDEBFE76F65FBD51AD2F14898B95B"
    Obtained hash (String)        : "38B060A751AC96384CD9327EB1B1E36A21FDB71114BE07434C0CC7BF63F6E1DA274EDEBFE76F65FBD51AD2F14898B95B"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count            : 16#00000000000000000000000000000008#
    Obtained bit count            : 16#00000000000000000000000000000008#
    Expected hash (String)        : "54A59B9F22B0B80880D8427E548B7C23ABD873486E1F035DCE9CD697E85175033CAA88E6D57BC35EFAE0B5AFD3145F31"
    Obtained hash (String)        : "54A59B9F22B0B80880D8427E548B7C23ABD873486E1F035DCE9CD697E85175033CAA88E6D57BC35EFAE0B5AFD3145F31"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count            : 16#00000000000000000000000000000018#
    Obtained bit count            : 16#00000000000000000000000000000018#
    Expected hash (String)        : "CB00753F45A35E8BB5A03D699AC65007272C32AB0EDED1631A8B605A43FF5BED8086072BA1E7CC2358BAECA134C825A7"
    Obtained hash (String)        : "CB00753F45A35E8BB5A03D699AC65007272C32AB0EDED1631A8B605A43FF5BED8086072BA1E7CC2358BAECA134C825A7"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count            : 16#00000000000000000000000000000070#
    Obtained bit count            : 16#00000000000000000000000000000070#
    Expected hash (String)        : "473ED35167EC1F5D8E550368A3DB39BE54639F828868E9454C239FC8B52E3C61DBD0D8B4DE1390C256DCBB5D5FD99CD5"
    Obtained hash (String)        : "473ED35167EC1F5D8E550368A3DB39BE54639F828868E9454C239FC8B52E3C61DBD0D8B4DE1390C256DCBB5D5FD99CD5"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count            : 16#000000000000000000000000000000D0#
    Obtained bit count            : 16#000000000000000000000000000000D0#
    Expected hash (String)        : "FEB67349DF3DB6F5924815D6C3DC133F091809213731FE5C7B5F4999E463479FF2877F5F2936FA63BB43784B12F3EBB4"
    Obtained hash (String)        : "FEB67349DF3DB6F5924815D6C3DC133F091809213731FE5C7B5F4999E463479FF2877F5F2936FA63BB43784B12F3EBB4"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count            : 16#000000000000000000000000000001F0#
    Obtained bit count            : 16#000000000000000000000000000001F0#
    Expected hash (String)        : "1761336E3F7CBFE51DEB137F026F89E01A448E3B1FAFA64039C1464EE8732F11A5341A6F41E0C202294736ED64DB1A84"
    Obtained hash (String)        : "1761336E3F7CBFE51DEB137F026F89E01A448E3B1FAFA64039C1464EE8732F11A5341A6F41E0C202294736ED64DB1A84"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count            : 16#00000000000000000000000000000280#
    Obtained bit count            : 16#00000000000000000000000000000280#
    Expected hash (String)        : "B12932B0627D1C060942F5447764155655BD4DA0C9AFA6DD9B9EF53129AF1B8FB0195996D2DE9CA0DF9D821FFEE67026"
    Obtained hash (String)        : "B12932B0627D1C060942F5447764155655BD4DA0C9AFA6DD9B9EF53129AF1B8FB0195996D2DE9CA0DF9D821FFEE67026"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count            : 16#00000000000000000000000000000158#
    Obtained bit count            : 16#00000000000000000000000000000158#
    Expected hash (String)        : "CA737F1014A48F4C0B6DD43CB177B0AFD9E5169367544C494011E3317DBF9A509CB1E5DC1E85A941BBEE3D7F2AFBC9B1"
    Obtained hash (String)        : "CA737F1014A48F4C0B6DD43CB177B0AFD9E5169367544C494011E3317DBF9A509CB1E5DC1E85A941BBEE3D7F2AFBC9B1"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count            : 16#000000000000000000000000000000E0#
    Obtained bit count            : 16#000000000000000000000000000000E0#
    Expected hash (String)        : "4741885C0AC81DFEBC612DA4F96C5F748E6FE18F6A20EAF6D829B1F60953C6E774F3D7A2AA1CF0F9833F907725380AAD"
    Obtained hash (String)        : "4741885C0AC81DFEBC612DA4F96C5F748E6FE18F6A20EAF6D829B1F60953C6E774F3D7A2AA1CF0F9833F907725380AAD"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 5
Test Case Result: PASSED
Finished        : 2017/05/23 - 08:18:23
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 6
Description     : Testing SHA-1 operation at counter offset and block boundary.
Started         : 2017/05/23 - 08:18:23
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Checking at counter offset boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  111
[I] Digest result for test vector:  1
    Expected bit count            : 16#00000000000000000000000000000378#
    Obtained bit count            : 16#00000000000000000000000000000378#
    Expected hash (String)        : "3C37955051CB5C3026F94D551D5B5E2AC38D572AE4E07172085FED81F8466B8F90DC23A8FFCDEA0B8D8E58E8FDACC80A"
    Obtained hash (String)        : "3C37955051CB5C3026F94D551D5B5E2AC38D572AE4E07172085FED81F8466B8F90DC23A8FFCDEA0B8D8E58E8FDACC80A"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  112
[I] Digest result for test vector:  2
    Expected bit count            : 16#00000000000000000000000000000380#
    Obtained bit count            : 16#00000000000000000000000000000380#
    Expected hash (String)        : "187D4E07CB306103C69967BF544D0DFBE9042577599C73C330ABC0CB64C61236D5ED565EE19119D8C31779A38F791FCD"
    Obtained hash (String)        : "187D4E07CB306103C69967BF544D0DFBE9042577599C73C330ABC0CB64C61236D5ED565EE19119D8C31779A38F791FCD"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  113
[I] Digest result for test vector:  3
    Expected bit count            : 16#00000000000000000000000000000388#
    Obtained bit count            : 16#00000000000000000000000000000388#
    Expected hash (String)        : "1D6BED01626682961B50DA078A6B1DA707C1DA0C8A0A3226F159235BD45ED724A0622FA6F39FD70007A6C72A5CDA43AE"
    Obtained hash (String)        : "1D6BED01626682961B50DA078A6B1DA707C1DA0C8A0A3226F159235BD45ED724A0622FA6F39FD70007A6C72A5CDA43AE"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count            : 16#000000000000000000000000000003F8#
    Obtained bit count            : 16#000000000000000000000000000003F8#
    Expected hash (String)        : "9BD06B1763C2CF7AEF40E795DC65BC96D59C41B537F3AD72EBDEFD485476B5717C1AEB37C327FE9C1831B12B9EFD08AE"
    Obtained hash (String)        : "9BD06B1763C2CF7AEF40E795DC65BC96D59C41B537F3AD72EBDEFD485476B5717C1AEB37C327FE9C1831B12B9EFD08AE"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count            : 16#00000000000000000000000000000400#
    Obtained bit count            : 16#00000000000000000000000000000400#
    Expected hash (String)        : "EDB12730A366098B3B2BEAC75A3BEF1B0969B15C48E2163C23D96994F8D1BEF760C7E27F3C464D3829F56C0D53808B0B"
    Obtained hash (String)        : "EDB12730A366098B3B2BEAC75A3BEF1B0969B15C48E2163C23D96994F8D1BEF760C7E27F3C464D3829F56C0D53808B0B"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count            : 16#00000000000000000000000000000408#
    Obtained bit count            : 16#00000000000000000000000000000408#
    Expected hash (String)        : "39B6F5A7B0E781DBC419F72E49B30EAAC10F2C98C4403BC610DA31067FD1B48F324138C8615D2B496D08D73D5E865326"
    Obtained hash (String)        : "39B6F5A7B0E781DBC419F72E49B30EAAC10F2C98C4403BC610DA31067FD1B48F324138C8615D2B496D08D73D5E865326"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 6
Test Case Result: PASSED
Finished        : 2017/05/23 - 08:18:23
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 7
Description     : Another standard SHA-1 test vector: 1,000,000 repetitions of 'a'
Started         : 2017/05/23 - 08:18:23
--------------------------------------------------------------------------------
[I] Performng 1,000 iteratios with a 1,000 bytes buffer
    Expected bit count (Low, High): ( 8000000,  0)
    Expected hash                 : "9D0E1809716474CB086E834E310A4A1CED149E9C00F248527972CEC5704C2A5B07B8B3DC38ECC4EBAE97DDD87F3D8985"
    Obtained bit count (Low, High): ( 8000000,  0)
    Obtained hash                 : "9D0E1809716474CB086E834E310A4A1CED149E9C00F248527972CEC5704C2A5B07B8B3DC38ECC4EBAE97DDD87F3D8985"
[I] Counters match
[I] Hashes match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 7
Test Case Result: PASSED
Finished        : 2017/05/23 - 08:18:23
--[End Test Case]---------------------------------------------------------------

================================================================================
CryptAda Test Driver End
CryptAda Test Driver Name: CryptAda.Tests.Unit.MD_SHA_384
Finished                 : 2017/05/23 - 08:18:23
================================================================================
