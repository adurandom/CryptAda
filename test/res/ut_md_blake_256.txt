================================================================================
TCantos Ada Cryptography Library (CryptAda)
Version: 0.1.d (2017/04/30)
Copyright (c) 2017, Antonio Duran
================================================================================
CryptAda Test Driver Begin
CryptAda Test Driver Name: CryptAda.Tests.Unit.MD_BLAKE_256
Description              : Unit test driver for CryptAda.Digests.Message_Digests.BLAKE_256 functionality.
Started                  : 2017/05/19 - 16:55:37
================================================================================

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 1
Description     : Getting a handle for message digest objects
Started         : 2017/05/19 - 16:55:37
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Get_Message_Digest_Handle
    - Is_Valid_Handle
    - Invalidate_Handle
    - Get_Message_Digest_Ptr
[I] Before Get_Message_Digest_Handle the handle is invalid:
[I] Handle is invalid
[I] Getting a pointer from an invalid handle will return null
[I] Pointer is null
[I] Trying any operation with a null pointer will raise Constraint_Error
    Trying Digest_Start
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-md_blake_256.adb:235 access check failed"
[I] Getting a message digest handle
[I] Information on handle BEFORE calling Get_Message_Digest_Handle
    Invalid Message_Digest_Handle
[I] Information on handle AFTER calling Get_Message_Digest_Handle
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Now the handle must be invalid:
[I] Handle is valid
[I] Getting a pointer from an invalid handle will return a not null value
[I] Pointer is not null
[I] Computing a hash value may succeed
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Calling Digest_Update
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest information AFTER Digest_Update
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#000000000000000000000000000000E0#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Calling Digest_End to finish processing and obtaining the computed Hash
[I] Digest information AFTER Digest_End
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#000000000000000000000000000000E0#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Checking digest computation results
[I] Expected hash
    - Hash size :  32
    - Hash bytes:
16#BF#, 16#93#, 16#F9#, 16#09#, 16#BD#, 16#AC#, 16#FD#, 16#08#, 16#AF#, 16#39#, 16#D0#, 16#94#, 16#EB#, 16#6B#, 16#62#, 16#A6#, 
16#64#, 16#1E#, 16#FB#, 16#4B#, 16#8D#, 16#B8#, 16#B2#, 16#D4#, 16#39#, 16#9E#, 16#D2#, 16#02#, 16#62#, 16#51#, 16#4A#, 16#1C#
[I] Obtained hash
    - Hash size :  32
    - Hash bytes:
16#BF#, 16#93#, 16#F9#, 16#09#, 16#BD#, 16#AC#, 16#FD#, 16#08#, 16#AF#, 16#39#, 16#D0#, 16#94#, 16#EB#, 16#6B#, 16#62#, 16#A6#, 
16#64#, 16#1E#, 16#FB#, 16#4B#, 16#8D#, 16#B8#, 16#B2#, 16#D4#, 16#39#, 16#9E#, 16#D2#, 16#02#, 16#62#, 16#51#, 16#4A#, 16#1C#
[I] Results match
[I] Invalidating handle
[I] Digest information AFTER invalidating handle
    Invalid Message_Digest_Handle
[I] Handle is invalid
[I] Using a pointer from an invalid handle must result in an exception
    Trying Digest_Start
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-md_blake_256.adb:318 access check failed"
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 1
Test Case Result: PASSED
Finished        : 2017/05/19 - 16:55:37
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 2
Description     : Testing default Digest_Start
Started         : 2017/05/19 - 16:55:37
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Digest_Start
    - Digest_Start(With_Salt)
[I] Default Digest_Start will start digest computation with default parameters
    BLAKE-256 has a Salt parameter
    Default salt value is: 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Using defaul Digest_Start
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Getting salt value
[I] Salt values match
[I] Calling Digest_Start(With_Salt)
    Setting Salt value to: 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Getting salt value
[I] Salt values match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 2
Test Case Result: PASSED
Finished        : 2017/05/19 - 16:55:37
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 3
Description     : Testing parametrized Digest_Start
Started         : 2017/05/19 - 16:55:37
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Digest_Start(Parameter_List)
[I] BLAKE-256 accept a parameter list containing a Salt value
[I] Using an empty parameters list will set the default salt value
    Parameter list: ()
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Salt values match
[I] Trying some invalid lists.
    Digest_Start must raise CryptAda_Bad_Argument_Error in all cases
[I] Parameter list: ("000102030405060708090a0b0c0d0e0f")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Parameter list is unnamed"
[I] Parameter list: (The_Salt=>"000102030405060708090a0b0c0d0e0f")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Parameter list does not contain mandatory 'Salt' item"
[I] Parameter list: (Salt=>"0001020304050607_08090a0b0c0d0e0f")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Caught exception: CRYPTADA.EXCEPTIONS.CRYPTADA_SYNTAX_ERROR, with message: "Invalid hexadecimal digit: '_'". When parsing BLAKE-256 parameter list"
[I] Parameter list: (Salt=>"000102030405060708090a0b0c0d0e")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Invalid 'Salt' length"
[I] Trying a valid parameter list
[I] Parameter list: (Salt=>"ffffffffffffffffffffffffffffffff")
[I] Digest information BEFORE Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Digest information AFTER Digest_Start
    Digest object tag name        : "CRYPTADA.DIGESTS.MESSAGE_DIGESTS.BLAKE_256.BLAKE_256_DIGEST"
    CryptAda digest algorithm id  : "MD_BLAKE_256"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : ""
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  32
    Input block size (bytes)      :  64
    Hash size (bytes)             :  32
    Processed bit count           : 16#00000000000000000000000000000000#
    Salt                          : 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Getting salt value
    Expected Salt value: 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
    Obtained Salt value: 
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Salt values match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 3
Test Case Result: PASSED
Finished        : 2017/05/19 - 16:55:37
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 4
Description     : Standard BLAKE-256 test vectors
Started         : 2017/05/19 - 16:55:37
--------------------------------------------------------------------------------
[I] Standard test vectors obtained from BLAKE documentation
    Number of vectors to test:  2
[I] Computing hash for a test vector:
    Hash algorithm                : MD_BLAKE_256
    Vector string                 : ""
    Vector length                 :  1
    Vector array                  : 
16#00#
[I] Digest results
    Expected bit count            : 16#00000000000000000000000000000008#
    Obtained bit count            : 16#00000000000000000000000000000008#
    Expected hash (String)        : "0CE8D4EF4DD7CD8D62DFDED9D4EDB0A774AE6A41929A74DA23109E8F11139C87"
    Obtained hash (String)        : "0CE8D4EF4DD7CD8D62DFDED9D4EDB0A774AE6A41929A74DA23109E8F11139C87"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for a test vector:
    Hash algorithm                : MD_BLAKE_256
    Vector string                 : ""
    Vector length                 :  72
    Vector array                  : 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 
16#00#, 16#00#
[I] Digest results
    Expected bit count            : 16#00000000000000000000000000000240#
    Obtained bit count            : 16#00000000000000000000000000000240#
    Expected hash (String)        : "D419BAD32D504FB7D44D460C42C5593FE544FA4C135DEC31E21BD9ABDCC22D41"
    Obtained hash (String)        : "D419BAD32D504FB7D44D460C42C5593FE544FA4C135DEC31E21BD9ABDCC22D41"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 4
Test Case Result: PASSED
Finished        : 2017/05/19 - 16:55:37
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 5
Description     : CryptAda BLAKE-256 test vectors
Started         : 2017/05/19 - 16:55:37
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained from https://asecuritysite.com/encryption/blake
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count            : 16#00000000000000000000000000000000#
    Obtained bit count            : 16#00000000000000000000000000000000#
    Expected hash (String)        : "716F6E863F744B9AC22C97EC7B76EA5F5908BC5B2F67C61510BFC4751384EA7A"
    Obtained hash (String)        : "716F6E863F744B9AC22C97EC7B76EA5F5908BC5B2F67C61510BFC4751384EA7A"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count            : 16#00000000000000000000000000000008#
    Obtained bit count            : 16#00000000000000000000000000000008#
    Expected hash (String)        : "43234FF894A9C0590D0246CFC574EB781A80958B01D7A2FA1AC73C673BA5E311"
    Obtained hash (String)        : "43234FF894A9C0590D0246CFC574EB781A80958B01D7A2FA1AC73C673BA5E311"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count            : 16#00000000000000000000000000000018#
    Obtained bit count            : 16#00000000000000000000000000000018#
    Expected hash (String)        : "1833A9FA7CF4086BD5FDA73DA32E5A1D75B4C3F89D5C436369F9D78BB2DA5C28"
    Obtained hash (String)        : "1833A9FA7CF4086BD5FDA73DA32E5A1D75B4C3F89D5C436369F9D78BB2DA5C28"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count            : 16#00000000000000000000000000000070#
    Obtained bit count            : 16#00000000000000000000000000000070#
    Expected hash (String)        : "F6F9C6AF30CE6979B51476BDB4E906775D7D30094695BC3D52A3285E8020741C"
    Obtained hash (String)        : "F6F9C6AF30CE6979B51476BDB4E906775D7D30094695BC3D52A3285E8020741C"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count            : 16#000000000000000000000000000000D0#
    Obtained bit count            : 16#000000000000000000000000000000D0#
    Expected hash (String)        : "6C648655A21F704A0BC72EB367B24144C9E8A1B07EFC34165B561B6C33514427"
    Obtained hash (String)        : "6C648655A21F704A0BC72EB367B24144C9E8A1B07EFC34165B561B6C33514427"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count            : 16#000000000000000000000000000001F0#
    Obtained bit count            : 16#000000000000000000000000000001F0#
    Expected hash (String)        : "7542C21B016B4D630D37B5F34DDC4C602E064D33746948F1D3F30EF17C3EEDF5"
    Obtained hash (String)        : "7542C21B016B4D630D37B5F34DDC4C602E064D33746948F1D3F30EF17C3EEDF5"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count            : 16#00000000000000000000000000000280#
    Obtained bit count            : 16#00000000000000000000000000000280#
    Expected hash (String)        : "4E6D62C426A2EBD4EE9C3AE673BAFB6F10C35ED731A5BF5FB26AB7E4CBA12398"
    Obtained hash (String)        : "4E6D62C426A2EBD4EE9C3AE673BAFB6F10C35ED731A5BF5FB26AB7E4CBA12398"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count            : 16#00000000000000000000000000000158#
    Obtained bit count            : 16#00000000000000000000000000000158#
    Expected hash (String)        : "7576698EE9CAD30173080678E5965916ADBB11CB5245D386BF1FFDA1CB26C9D7"
    Obtained hash (String)        : "7576698EE9CAD30173080678E5965916ADBB11CB5245D386BF1FFDA1CB26C9D7"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_BLAKE_256
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count            : 16#000000000000000000000000000000E0#
    Obtained bit count            : 16#000000000000000000000000000000E0#
    Expected hash (String)        : "BF93F909BDACFD08AF39D094EB6B62A6641EFB4B8DB8B2D4399ED20262514A1C"
    Obtained hash (String)        : "BF93F909BDACFD08AF39D094EB6B62A6641EFB4B8DB8B2D4399ED20262514A1C"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 5
Test Case Result: PASSED
Finished        : 2017/05/19 - 16:55:37
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 6
Description     : Testing BLAKE-256 operation at counter offset and block boundary.
Started         : 2017/05/19 - 16:55:37
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained from https://asecuritysite.com/encryption/blake
[I] Checking at counter offset boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  55
[I] Digest result for test vector:  1
    Expected bit count            : 16#000000000000000000000000000001B8#
    Obtained bit count            : 16#000000000000000000000000000001B8#
    Expected hash (String)        : "6E8D7898571228C1106FCEC9EF9C5DB9DF8A3A2DCD2655A848AF596D181BBAE4"
    Obtained hash (String)        : "6E8D7898571228C1106FCEC9EF9C5DB9DF8A3A2DCD2655A848AF596D181BBAE4"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  56
[I] Digest result for test vector:  2
    Expected bit count            : 16#000000000000000000000000000001C0#
    Obtained bit count            : 16#000000000000000000000000000001C0#
    Expected hash (String)        : "EA7A29472A26148914ABB8033869BE9BDEA294FDD2B73ED7A02A7692940F5B9E"
    Obtained hash (String)        : "EA7A29472A26148914ABB8033869BE9BDEA294FDD2B73ED7A02A7692940F5B9E"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  57
[I] Digest result for test vector:  3
    Expected bit count            : 16#000000000000000000000000000001C8#
    Obtained bit count            : 16#000000000000000000000000000001C8#
    Expected hash (String)        : "CE22E4AB7C77D095F22688612E517AF0F4B2C68AB59AC7FCEBD2B73C6EE931ED"
    Obtained hash (String)        : "CE22E4AB7C77D095F22688612E517AF0F4B2C68AB59AC7FCEBD2B73C6EE931ED"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  63
[I] Digest result for test vector:  1
    Expected bit count            : 16#000000000000000000000000000001F8#
    Obtained bit count            : 16#000000000000000000000000000001F8#
    Expected hash (String)        : "3155FC3C426C938D522812423BC93266FB5BDD61CA0CAB971DC190D93A6E51C7"
    Obtained hash (String)        : "3155FC3C426C938D522812423BC93266FB5BDD61CA0CAB971DC190D93A6E51C7"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  64
[I] Digest result for test vector:  2
    Expected bit count            : 16#00000000000000000000000000000200#
    Obtained bit count            : 16#00000000000000000000000000000200#
    Expected hash (String)        : "84D7F3BBF2CFC3EE940DDB6D25045C6D3F756C4B2077A8128E171D5D165BE170"
    Obtained hash (String)        : "84D7F3BBF2CFC3EE940DDB6D25045C6D3F756C4B2077A8128E171D5D165BE170"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  65
[I] Digest result for test vector:  3
    Expected bit count            : 16#00000000000000000000000000000208#
    Obtained bit count            : 16#00000000000000000000000000000208#
    Expected hash (String)        : "B0245AAEC4C7FECD2E5816CAEEBD785D855921D2123C74876672607842967D14"
    Obtained hash (String)        : "B0245AAEC4C7FECD2E5816CAEEBD785D855921D2123C74876672607842967D14"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 6
Test Case Result: PASSED
Finished        : 2017/05/19 - 16:55:37
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 7
Description     : Another BLAKE-256 test vector: 1,000,000 repetitions of 'a'
Started         : 2017/05/19 - 16:55:37
--------------------------------------------------------------------------------
[I] Performng 1,000 iteratios with a 1,000 bytes buffer
    Expected bit count (Low, High): ( 8000000,  0)
    Expected hash                 : "22BE6DE4AA4214C9403F10598F0A6B0E834570251A13BC27589437F7139A5D44"
    Obtained bit count (Low, High): ( 8000000,  0)
    Obtained hash                 : "22BE6DE4AA4214C9403F10598F0A6B0E834570251A13BC27589437F7139A5D44"
[I] Counters match
[I] Hashes match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 7
Test Case Result: PASSED
Finished        : 2017/05/19 - 16:55:37
--[End Test Case]---------------------------------------------------------------

================================================================================
CryptAda Test Driver End
CryptAda Test Driver Name: CryptAda.Tests.Unit.MD_BLAKE_256
Finished                 : 2017/05/19 - 16:55:37
================================================================================
