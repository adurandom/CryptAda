================================================================================
TCantos Ada Cryptography Library (CryptAda)
Version: 0.2.a (2017/05/30)
Copyright (c) 2017, Antonio Duran
================================================================================
CryptAda Test Driver Begin
CryptAda Test Driver Name: CryptAda.Tests.Unit.TDEA
Description              : Unit test driver for CryptAda.Ciphers.Symmetric.Block.TDEA functionality.
Started                  : 2017/06/01 - 18:25:43
================================================================================

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 1
Description     : Getting a handle for cipher objects
Started         : 2017/06/01 - 18:25:43
--------------------------------------------------------------------------------
[I] Subprograms tested: 
    - Get_Symmetric_Cipher_Handle
    - Is_Valid_Handle
    - Invalidate_Handle
    - Get_Symmetric_Cipher_Ptr
[I] Before Get_Symmetric_Cipher_Handle the handle is invalid:
[I] Handle is invalid
[I] Getting a pointer from an invalid handle will return null
[I] Pointer is null
[I] Trying any operation with a null pointer will raise Constraint_Error
    Trying Start_Cipher
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-tdea.adb:187 access check failed"
[I] Getting a symmetric cipher handle
[I] Information on handle BEFORE calling Get_Symmetric_Cipher_Handle
[I] Invalid symmetric cipher handle
[I] Information on handle AFTER calling Get_Symmetric_Cipher_Handle
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : IDLE
    Started                       : FALSE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
[I] Now the handle must be valid:
[I] Handle is valid
[I] Getting a pointer from an valid handle will return a not null value
[I] Pointer is not null
[I] Starting cipher must succeed now
[I] Information on handle AFTER Start_Cipher
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : ENCRYPTING
    Started                       : TRUE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
[I] Calling Stop_Cipher
[I] Information on handle AFTER Stop_Cipher
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : IDLE
    Started                       : FALSE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
[I] Invalidating handle
[I] Information on handle AFTER invalidating handle
[I] Invalid symmetric cipher handle
[I] Handle is invalid
[I] Using a pointer from an invalid handle must result in an exception
    Trying Start_Cipher
[I] Caught Constraint_Error
    Exception: "CONSTRAINT_ERROR"
    Message  : "cryptada-tests-unit-tdea.adb:260 access check failed"
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 1
Test Case Result: PASSED
Finished        : 2017/06/01 - 18:25:43
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 2
Description     : Running TDEA_Cipher basic tests
Started         : 2017/06/01 - 18:25:43
--------------------------------------------------------------------------------
[I] Basic test for TDEA_Cipher
    This test case is a 10 step test that will exercise Block_Cipher dispatching operations
[I] Cipher information:
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : IDLE
    Started                       : FALSE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
    Block size                    :  8
[I] Basic Test 1
    Trying to process a block with a cipher in Idle state.
    Must raise CryptAda_Uninitialized_Cipher_Error exception.
[I] Block to process:
Block length:  8
Block data  :
16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
[I] Caught CryptAda_Uninitialized_Cipher_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_UNINITIALIZED_CIPHER_ERROR'
    - Message  : 'TDEA cipher is in Idle state'
[I] Basic Test 2
    Trying Start_Cipher with an invalid key
    Must raise CryptAda_Invalid_Key_Error exception.
[I] Using a null key
[I] The key
Null key
[I] Calling to Start_Cipher
[I] Caught CryptAda_Invalid_Key_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_KEY_ERROR'
    - Message  : 'Invalid TDEA key'
[I] Using key with excessive length
[I] Maximum key length is:  24
[I] The key
    Key length:  25
    Key bytes :
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#
[I] Calling to Start_Cipher
[I] Caught CryptAda_Invalid_Key_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_KEY_ERROR'
    - Message  : 'Invalid TDEA key'
[I] Basic Test 3
    Checking state after successful Start_Cipher for encryption
[I] Key set to
    Key length:  24
    Key bytes :
16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 
16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#, 16#CC#
[I] Cipher now must be in Encrypting state
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : ENCRYPTING
    Started                       : TRUE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
    Block size                    :  8
[I] Basic Test 4
    Trying to encrypt blocks of invalid length
    Must raise CryptAda_Invalid_Block_Length_Error
    Cipher block size:  8 bytes
[I] Invalid input block information: 
Block length:  7
Block data  :
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
    Cipher block size:  8 bytes
[I] Invalid input block information: 
Block length:  9
Block data  :
16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
    Cipher block size:  8 bytes
[I] Invalid output block information: 
Block length:  7
Block data  :
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
    Cipher block size:  8 bytes
[I] Invalid output block information: 
Block length:  9
Block data  :
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
[I] Basic Test 5
    Encrypting a valid block
[I] Block to encrypt
Block length:  8
Block data  :
16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
[I] Encrypted block
Block length:  8
Block data  :
16#C7#, 16#7B#, 16#AC#, 16#AF#, 16#25#, 16#63#, 16#BB#, 16#67#
[I] Basic Test 6
    Stopping the cipher and check state
[I] Cipher now must be in Idle state
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : IDLE
    Started                       : FALSE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
    Block size                    :  8
[I] Basic Test 7
    Checking cipher state after successful Start_Cipher for decryption
[I] Cipher now must be in Decrypting state
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : DECRYPTING
    Started                       : TRUE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
    Block size                    :  8
[I] Basic Test 8
    Trying to decryt blocks of invalid length
    Must raise CryptAda_Invalid_Block_Length_Error
    Cipher block size:  8 bytes
[I] Invalid input block information: 
Block length:  7
Block data  :
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
    Cipher block size:  8 bytes
[I] Invalid input block information: 
Block length:  9
Block data  :
16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
    Cipher block size:  8 bytes
[I] Invalid output block information: 
Block length:  7
Block data  :
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
    Cipher block size:  8 bytes
[I] Invalid output block information: 
Block length:  9
Block data  :
16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Caught CryptAda_Invalid_Block_Length_Error
    - Exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_BLOCK_LENGTH_ERROR'
    - Message  : 'Invalid block length'
[I] Basic Test 9
    Decrypting the block encrypted on basic test 5. Must be equal to original
    plaintext block
[I] Block to decrypt
Block length:  8
Block data  :
16#C7#, 16#7B#, 16#AC#, 16#AF#, 16#25#, 16#63#, 16#BB#, 16#67#
[I] Decrypted block
Block length:  8
Block data  :
16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
[I] Results match
[I] Basic Test 10
    Final Stop_Cipher
[I] Cipher now must be in Idle state
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : IDLE
    Started                       : FALSE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
    Block size                    :  8
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 2
Test Case Result: PASSED
Finished        : 2017/06/01 - 18:25:43
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 3
Description     : Start_Cipher(Parameter List)
Started         : 2017/06/01 - 18:25:43
--------------------------------------------------------------------------------
[I] Trying Start_Cipher with some invalid lists
[I] List  1: "()"
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Parameters list must be a named list"
[I] List  2: "(Encrypt,"010203040506070809101112131415161718192021222324")"
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Parameters list must be a named list"
[I] List  3: "(Op=>Encrypt,Key=>"010203040506070809101112131415161718192021222324")"
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Missing mandatory item 'Operation'"
[I] List  4: "(Operation=>Encrypt,K=>"010203040506070809101112131415161718192021222324")"
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Missing mandatory item 'Key'"
[I] List  5: "(Operation=>Encrypting,Key=>"010203040506070809101112131415161718192021222324")"
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Caught exception: 'CONSTRAINT_ERROR', with message: 'bad input for 'Value: "Encrypting"', when obtaining 'Operation' parameter"
[I] List  6: "(Operation=>Encrypt,Key=>"01020304050607080910111213141516@1718192021222324")"
[I] Caught CryptAda_Bad_Argument_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_BAD_ARGUMENT_ERROR"
    Message  : "Caught exception: 'CRYPTADA.EXCEPTIONS.CRYPTADA_SYNTAX_ERROR', with message: 'Invalid hexadecimal digit: '@'', when obtaining 'Key' parameter"
[I] List  7: "(Operation=>Encrypt,Key=>"0102030405060708091011121314151617181920212223")"
[I] Caught CryptAda_Invalid_Key_Error
    Exception: "CRYPTADA.EXCEPTIONS.CRYPTADA_INVALID_KEY_ERROR"
    Message  : "Invalid TDEA key"
[I] Encrypting with valid parameter lists
[I] Parameter list: "(Operation=>Encrypt,Key=>"000102030405060710111213141516172021222324252627")"
[I] Block to encrypt
Block length:  8
Block data  :
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
Keying Option: KEYING_OPTION_1
[I] Ciphered block
Block length:  8
Block data  :
16#8F#, 16#37#, 16#66#, 16#17#, 16#7D#, 16#A6#, 16#E1#, 16#6F#
[I] Decrypting with valid parameter list
[I] Parameter list: "(Operation=>Decrypt,Key=>"000102030405060710111213141516172021222324252627")"
[I] Block to decrypt
Block length:  8
Block data  :
16#8F#, 16#37#, 16#66#, 16#17#, 16#7D#, 16#A6#, 16#E1#, 16#6F#
Keying Option: KEYING_OPTION_1
[I] Decrypted block
Block length:  8
Block data  :
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Results match
[I] Parameter list: "(Operation=>Encrypt,Key=>"000102030405060710111213141516170001020304050607")"
[I] Block to encrypt
Block length:  8
Block data  :
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
Keying Option: KEYING_OPTION_2
[I] Ciphered block
Block length:  8
Block data  :
16#49#, 16#F2#, 16#B5#, 16#AB#, 16#83#, 16#7B#, 16#D5#, 16#0A#
[I] Decrypting with valid parameter list
[I] Parameter list: "(Operation=>Decrypt,Key=>"000102030405060710111213141516170001020304050607")"
[I] Block to decrypt
Block length:  8
Block data  :
16#49#, 16#F2#, 16#B5#, 16#AB#, 16#83#, 16#7B#, 16#D5#, 16#0A#
Keying Option: KEYING_OPTION_2
[I] Decrypted block
Block length:  8
Block data  :
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Results match
[I] Parameter list: "(Operation=>Encrypt,Key=>"000102030405060700010203040506070001020304050607")"
[I] Block to encrypt
Block length:  8
Block data  :
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
Keying Option: KEYING_OPTION_3
[I] Ciphered block
Block length:  8
Block data  :
16#6B#, 16#66#, 16#FE#, 16#34#, 16#9D#, 16#7E#, 16#FD#, 16#48#
[I] Decrypting with valid parameter list
[I] Parameter list: "(Operation=>Decrypt,Key=>"000102030405060700010203040506070001020304050607")"
[I] Block to decrypt
Block length:  8
Block data  :
16#6B#, 16#66#, 16#FE#, 16#34#, 16#9D#, 16#7E#, 16#FD#, 16#48#
Keying Option: KEYING_OPTION_3
[I] Decrypted block
Block length:  8
Block data  :
16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#, 16#FF#
[I] Results match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 3
Test Case Result: PASSED
Finished        : 2017/06/01 - 18:25:43
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 4
Description     : Testing TDEA_Cipher non dispatching operations
Started         : 2017/06/01 - 18:25:43
--------------------------------------------------------------------------------
[I] Interfaces to test:
Is_Valid_TDEA_Key
[I] Checking validity of null key
[I] Null key
Null key
Keying option: KEYING_OPTION_1
Key is not valid: OK
Keying option: KEYING_OPTION_2
Key is not valid: OK
Keying option: KEYING_OPTION_3
Key is not valid: OK
[I] Checking validity of invalid key lengths
[I] Invalid key 1
    Key length:  23
    Key bytes :
16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 
16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#
Keying option: KEYING_OPTION_1
Key is not valid: OK
Keying option: KEYING_OPTION_2
Key is not valid: OK
Keying option: KEYING_OPTION_3
Key is not valid: OK
[I] Checking validity of invalid key lengths
[I] Invalid key 2
    Key length:  25
    Key bytes :
16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 
16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#, 16#AD#
Keying option: KEYING_OPTION_1
Key is not valid: OK
Keying option: KEYING_OPTION_2
Key is not valid: OK
Keying option: KEYING_OPTION_3
Key is not valid: OK
[I] Checking validity of valid key lengths
[I] Valid key for Keying option:KEYING_OPTION_1
    Key length:  24
    Key bytes :
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 
16#33#, 16#33#, 16#33#, 16#33#, 16#33#, 16#33#, 16#33#, 16#33#
Key is valid: OK
[I] Valid key for Keying option:KEYING_OPTION_2
    Key length:  24
    Key bytes :
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 16#22#, 
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#
Key is valid: OK
[I] Valid key for Keying option:KEYING_OPTION_3
    Key length:  24
    Key bytes :
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 
16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#, 16#11#
Key is valid: OK
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 4
Test Case Result: PASSED
Finished        : 2017/06/01 - 18:25:43
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 5
Description     : TDEA standard test vectors
Started         : 2017/06/01 - 18:25:43
--------------------------------------------------------------------------------
[I] Using test vectors obtained from: "NIST Special Publication 800-20"
[I] TDEA Known Answer Tests:  1
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#80#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#95#, 16#F8#, 16#A5#, 16#E5#, 16#DD#, 16#31#, 16#D9#, 16#00#
    Encrypting ...
    Obtained encrypted block: 16#95#, 16#F8#, 16#A5#, 16#E5#, 16#DD#, 16#31#, 16#D9#, 16#00#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#80#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] TDEA Known Answer Tests:  2
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#40#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#DD#, 16#7F#, 16#12#, 16#1C#, 16#A5#, 16#01#, 16#56#, 16#19#
    Encrypting ...
    Obtained encrypted block: 16#DD#, 16#7F#, 16#12#, 16#1C#, 16#A5#, 16#01#, 16#56#, 16#19#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#40#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] TDEA Known Answer Tests:  3
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#20#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#2E#, 16#86#, 16#53#, 16#10#, 16#4F#, 16#38#, 16#34#, 16#EA#
    Encrypting ...
    Obtained encrypted block: 16#2E#, 16#86#, 16#53#, 16#10#, 16#4F#, 16#38#, 16#34#, 16#EA#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#20#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] TDEA Known Answer Tests:  4
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#10#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#4B#, 16#D3#, 16#88#, 16#FF#, 16#6C#, 16#D8#, 16#1D#, 16#4F#
    Encrypting ...
    Obtained encrypted block: 16#4B#, 16#D3#, 16#88#, 16#FF#, 16#6C#, 16#D8#, 16#1D#, 16#4F#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#10#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] TDEA Known Answer Tests:  5
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#08#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#20#, 16#B9#, 16#E7#, 16#67#, 16#B2#, 16#FB#, 16#14#, 16#56#
    Encrypting ...
    Obtained encrypted block: 16#20#, 16#B9#, 16#E7#, 16#67#, 16#B2#, 16#FB#, 16#14#, 16#56#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#08#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] TDEA Known Answer Tests:  6
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#04#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#55#, 16#57#, 16#93#, 16#80#, 16#D7#, 16#71#, 16#38#, 16#EF#
    Encrypting ...
    Obtained encrypted block: 16#55#, 16#57#, 16#93#, 16#80#, 16#D7#, 16#71#, 16#38#, 16#EF#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#04#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] TDEA Known Answer Tests:  7
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#02#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#6C#, 16#C5#, 16#DE#, 16#FA#, 16#AF#, 16#04#, 16#51#, 16#2F#
    Encrypting ...
    Obtained encrypted block: 16#6C#, 16#C5#, 16#DE#, 16#FA#, 16#AF#, 16#04#, 16#51#, 16#2F#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#02#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] TDEA Known Answer Tests:  8
    Key                     : 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#, 16#01#
    Plain text block        : 16#01#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
    Expected encrypted block: 16#0D#, 16#9F#, 16#27#, 16#9B#, 16#A5#, 16#D8#, 16#72#, 16#60#
    Encrypting ...
    Obtained encrypted block: 16#0D#, 16#9F#, 16#27#, 16#9B#, 16#A5#, 16#D8#, 16#72#, 16#60#
[I] Cipher test vector, results match
    Decrypting ...
    Obtained decrypted block: 16#01#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#, 16#00#
[I] Cipher test vector, results match
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 5
Test Case Result: PASSED
Finished        : 2017/06/01 - 18:25:43
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 6
Description     : TDEA Bulk test
Started         : 2017/06/01 - 18:25:43
--------------------------------------------------------------------------------
[I] Block cipher bulk test
    Performing  10000 iterations of decrypt(encrypt(plain_text)), checking that
    resulting block is equal to original plaintext block.
    Both, original plaintext block and key are random generated.
[I] Information of cipher object:
    Cipher object tag name        : "CRYPTADA.CIPHERS.SYMMETRIC.BLOCK.TDEA.TDEA_CIPHER"
    CryptAda cipher algorithm id  : SC_TDEA_EDE
    Cipher type                   : BLOCK_CIPHER
    Cipher state                  : IDLE
    Started                       : FALSE
    Minimum key length            :  24
    Maximum key length            :  24
    Default key length            :  24
    Key length increment step     :  0
    Block size                    :  8
[I] Bulk test completed OK
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 6
Test Case Result: PASSED
Finished        : 2017/06/01 - 18:25:44
--[End Test Case]---------------------------------------------------------------

================================================================================
CryptAda Test Driver End
CryptAda Test Driver Name: CryptAda.Tests.Unit.TDEA
Finished                 : 2017/06/01 - 18:25:44
================================================================================
