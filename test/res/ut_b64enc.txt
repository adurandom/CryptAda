================================================================================
TCantos Ada Cryptography Library (CryptAda)
Version: 0.1.b (2017/03/31)
Copyright (c) 2017, Antonio Duran
================================================================================
CryptAda Test Driver Begin
CryptAda Test Driver Name: CryptAda.Tests.Unit.Base64_Encoders
Description              : Unit test driver for CryptAda.Encoders.Base64_Encoders functionality.
Started                  : 2017/03/31 - 19:29:05
================================================================================

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 1
Description     : Testing state and counters during encoding.
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Initial state of encoder object ...
[I] Checking encoder state:
Expected State     : "STATE_IDLE"
Obtained State     : "STATE_IDLE"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] After Start_Encoding ...
[I] Checking encoder state:
Expected State     : "STATE_ENCODING"
Obtained State     : "STATE_ENCODING"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] Encoding an array
Array to encode :
16#28#, 16#63#, 16#29#, 16#20#, 16#32#, 16#30#, 16#31#, 16#37#, 16#2C#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 
16#73#, 16#20#, 16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
Array Length    :  26
[I] Checking encoder state:
Expected State     : "STATE_ENCODING"
Obtained State     : "STATE_ENCODING"
Expected Byte Count:  24
Obtained Byte Count:  24
Expected Code Count:  32
Obtained Code Count:  32
[I] State matches
Encoding results: "KGMpIDIwMTcsIFRDYW50b3MgU29mdHdh"
[I] End encoding
[I] Checking encoder state:
Expected State     : "STATE_IDLE"
Obtained State     : "STATE_IDLE"
Expected Byte Count:  26
Obtained Byte Count:  26
Expected Code Count:  36
Obtained Code Count:  36
[I] State matches
[I] Encoding results:
Expected: "KGMpIDIwMTcsIFRDYW50b3MgU29mdHdhcmU="
Obtained: "KGMpIDIwMTcsIFRDYW50b3MgU29mdHdhcmU="
[I] Result matches
--------------------------------------------------------------------------------
Test Case Number: 1
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 2
Description     : Testing CryptAda_Bad_Operation_Error raising in Idle_State
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Initial state of encoder object is State_Idle
[I] Checking encoder state:
Expected State     : "STATE_IDLE"
Obtained State     : "STATE_IDLE"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] Trying Encode (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying End_Encoding (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying Decode (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying End_Decoding (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 2
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 3
Description     : Testing CryptAda_Bad_Operation_Error raising in Encoding_State
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Initial state of encoder object is State_Idle
[I] Checking encoder state:
Expected State     : "STATE_IDLE"
Obtained State     : "STATE_IDLE"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] After Start_Encoding state must be State_Encoding
[I] Checking encoder state:
Expected State     : "STATE_ENCODING"
Obtained State     : "STATE_ENCODING"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] Trying Encode (must not raise CryptAda_Bad_Operation_Error)
[I] No exception raised
[I] Trying Start_Encoding (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying Decode (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying End_Decoding (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying End_Encoding (must not raise CryptAda_Bad_Operation_Error)
[I] No exception raised
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 3
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 4
Description     : Testing state and counters during decoding.
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Initial state of encoder object ...
[I] Checking encoder state:
Expected State     : "STATE_IDLE"
Obtained State     : "STATE_IDLE"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] After Start_Decoding ...
[I] Checking encoder state:
Expected State     : "STATE_DECODING"
Obtained State     : "STATE_DECODING"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] Decoding an encoded string
String to decode: "KGMpIDIwMTcsIFRDYW50b3MgU29mdHdhcmU="
[I] Checking encoder state:
Expected State     : "STATE_DECODING"
Obtained State     : "STATE_DECODING"
Expected Byte Count:  26
Obtained Byte Count:  26
Expected Code Count:  36
Obtained Code Count:  36
[I] State matches
[I] Encoder must be stopped
Decoding_Stopped = TRUE
[I] End decoding
[I] Checking encoder state:
Expected State     : "STATE_IDLE"
Obtained State     : "STATE_IDLE"
Expected Byte Count:  26
Obtained Byte Count:  26
Expected Code Count:  36
Obtained Code Count:  36
[I] State matches
[I] Decoding results:
Expected array length :  26
Obtained array length :  26
Expected decoded array: 
16#28#, 16#63#, 16#29#, 16#20#, 16#32#, 16#30#, 16#31#, 16#37#, 16#2C#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 
16#73#, 16#20#, 16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
Obtained decoded array: 
16#28#, 16#63#, 16#29#, 16#20#, 16#32#, 16#30#, 16#31#, 16#37#, 16#2C#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 
16#73#, 16#20#, 16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Result matches
--------------------------------------------------------------------------------
Test Case Number: 4
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 5
Description     : Testing CryptAda_Bad_Operation_Error raising in Decoding_State
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Initial state of encoder object is State_Idle
[I] Checking encoder state:
Expected State     : "STATE_IDLE"
Obtained State     : "STATE_IDLE"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] After Start_Decoding state must be State_Decoding
[I] Checking encoder state:
Expected State     : "STATE_DECODING"
Obtained State     : "STATE_DECODING"
Expected Byte Count:  0
Obtained Byte Count:  0
Expected Code Count:  0
Obtained Code Count:  0
[I] State matches
[I] Trying Decode (must not raise CryptAda_Bad_Operation_Error)
[I] No exception raised
[I] Trying Start_Decoding (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying Encode (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying End_Encoding (must raise CryptAda_Bad_Operation_Error)
[I] Raised CryptAda_Bad_Operation_Error
[I] Trying End_Decoding (must not raise CryptAda_Bad_Operation_Error)
[I] No exception raised
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 5
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 6
Description     : Testing encoding/decoding with different Base64 alphabets
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Encoding with standard alphabet
Encoding array   : 
16#FB#, 16#FF#, 16#FE#
Expected encoding: "+//+"
Alphabet in use: STANDARD_ALPHABET
Obtained encoding: "+//+"
[I] Result matches
[I] Encoding with URL safe alphabet
Encoding array   : 
16#FB#, 16#FF#, 16#FE#
Expected encoding: "-__-"
Alphabet in use: URL_SAFE_ALPHABET
Obtained encoding: "-__-"
[I] Result matches
[I] Decoding with standard alphabet
Decoding string  : "+//+"
Expected decoding: 
16#FB#, 16#FF#, 16#FE#
Alphabet in use: STANDARD_ALPHABET
Obtained decoding: 
16#FB#, 16#FF#, 16#FE#
[I] Result matches
[I] Decoding with URL safe alphabet
Decoding string  : "-__-"
Expected decoding: 
16#FB#, 16#FF#, 16#FE#
Alphabet in use: URL_SAFE_ALPHABET
Obtained decoding: 
16#FB#, 16#FF#, 16#FE#
[I] Result matches
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 6
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 7
Description     : Encoding and decoding one byte/code at a time.
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Encoding byte by byte
Byte array to encode
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#, 16#72#
Expected encoding: "Zm9vYmFy"
>>> Encoding byte  1 => 16#66#
>>> Byte count:  0
>>> Code count:  0
>>> Encoding  : ""
>>> Encoding byte  2 => 16#6F#
>>> Byte count:  0
>>> Code count:  0
>>> Encoding  : ""
>>> Encoding byte  3 => 16#6F#
>>> Byte count:  3
>>> Code count:  4
>>> Encoding  : "Zm9v"
>>> Encoding byte  4 => 16#62#
>>> Byte count:  3
>>> Code count:  4
>>> Encoding  : "Zm9v"
>>> Encoding byte  5 => 16#61#
>>> Byte count:  3
>>> Code count:  4
>>> Encoding  : "Zm9v"
>>> Encoding byte  6 => 16#72#
>>> Byte count:  6
>>> Code count:  8
>>> Encoding  : "Zm9vYmFy"
>>> End_Encoding
>>> Byte count:  6
>>> Code count:  8
>>> Encoding  : "Zm9vYmFy"
[I] Result matches
[I] Decoding code by code
[I] String to decode: "Zm9vYmFy"
[I] Expected byte array:
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#, 16#72#
>>> Decoding code  1 => 'Z'
>>> Byte count:  0
>>> Code count:  0
>>> Decoded   : 

>>> Decoding code  2 => 'm'
>>> Byte count:  0
>>> Code count:  0
>>> Decoded   : 

>>> Decoding code  3 => '9'
>>> Byte count:  0
>>> Code count:  0
>>> Decoded   : 

>>> Decoding code  4 => 'v'
>>> Byte count:  3
>>> Code count:  4
>>> Decoded   : 
16#66#, 16#6F#, 16#6F#
>>> Decoding code  5 => 'Y'
>>> Byte count:  3
>>> Code count:  4
>>> Decoded   : 
16#66#, 16#6F#, 16#6F#
>>> Decoding code  6 => 'm'
>>> Byte count:  3
>>> Code count:  4
>>> Decoded   : 
16#66#, 16#6F#, 16#6F#
>>> Decoding code  7 => 'F'
>>> Byte count:  3
>>> Code count:  4
>>> Decoded   : 
16#66#, 16#6F#, 16#6F#
>>> Decoding code  8 => 'y'
>>> Byte count:  6
>>> Code count:  8
>>> Decoded   : 
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#, 16#72#
>>> End_Decoding
>>> Byte count:  6
>>> Code count:  8
>>> Decoded   : 
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#, 16#72#
[I] Result matches
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 7
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 8
Description     : Testing encoding/decoding RFC 4648 test vectors
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Encoding test vectors
[I] Decoded (as string)     : ""
Decoded (as byte array) :

Expected encoding result: ""
Obtained encoding result: ""
[I] Result matches
[I] Decoded (as string)     : "f"
Decoded (as byte array) :
16#66#
Expected encoding result: "Zg=="
Obtained encoding result: "Zg=="
[I] Result matches
[I] Decoded (as string)     : "fo"
Decoded (as byte array) :
16#66#, 16#6F#
Expected encoding result: "Zm8="
Obtained encoding result: "Zm8="
[I] Result matches
[I] Decoded (as string)     : "foo"
Decoded (as byte array) :
16#66#, 16#6F#, 16#6F#
Expected encoding result: "Zm9v"
Obtained encoding result: "Zm9v"
[I] Result matches
[I] Decoded (as string)     : "foob"
Decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#
Expected encoding result: "Zm9vYg=="
Obtained encoding result: "Zm9vYg=="
[I] Result matches
[I] Decoded (as string)     : "fooba"
Decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#
Expected encoding result: "Zm9vYmE="
Obtained encoding result: "Zm9vYmE="
[I] Result matches
[I] Decoded (as string)     : "foobar"
Decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#, 16#72#
Expected encoding result: "Zm9vYmFy"
Obtained encoding result: "Zm9vYmFy"
[I] Result matches
[I] Decoding test vectors
[I] Encoded                          : ""
Expected decoded (as string)     : ""
Expected decoded (as byte array) :

Obtained decoded (as byte array) :

[I] Result matches
[I] Encoded                          : "Zg=="
Expected decoded (as string)     : "f"
Expected decoded (as byte array) :
16#66#
Obtained decoded (as byte array) :
16#66#
[I] Result matches
[I] Encoded                          : "Zm8="
Expected decoded (as string)     : "fo"
Expected decoded (as byte array) :
16#66#, 16#6F#
Obtained decoded (as byte array) :
16#66#, 16#6F#
[I] Result matches
[I] Encoded                          : "Zm9v"
Expected decoded (as string)     : "foo"
Expected decoded (as byte array) :
16#66#, 16#6F#, 16#6F#
Obtained decoded (as byte array) :
16#66#, 16#6F#, 16#6F#
[I] Result matches
[I] Encoded                          : "Zm9vYg=="
Expected decoded (as string)     : "foob"
Expected decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#
Obtained decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#
[I] Result matches
[I] Encoded                          : "Zm9vYmE="
Expected decoded (as string)     : "fooba"
Expected decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#
Obtained decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#
[I] Result matches
[I] Encoded                          : "Zm9vYmFy"
Expected decoded (as string)     : "foobar"
Expected decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#, 16#72#
Obtained decoded (as byte array) :
16#66#, 16#6F#, 16#6F#, 16#62#, 16#61#, 16#72#
[I] Result matches
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 8
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 9
Description     : Testing syntactic erroneous Base64 encoded strings
Started         : 2017/03/31 - 19:29:05
--------------------------------------------------------------------------------
[I] Using standard alphabet
[I] Trying to decode: "       "
Must raise CryptAda_Syntax_Error
Calling to Decode
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Z==="
Must raise CryptAda_Syntax_Error
Calling to Decode
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Zm8b**"
Must raise CryptAda_Syntax_Error
Calling to Decode
Calling to End_Decoding
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Zm9v=="
Must raise CryptAda_Syntax_Error
Calling to Decode
Calling to End_Decoding
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: " Zm9vYmE="
Must raise CryptAda_Syntax_Error
Calling to Decode
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Zm9vYmFya="
Must raise CryptAda_Syntax_Error
Calling to Decode
Calling to End_Decoding
[I] Raised CryptAda_Syntax_Error
[I] Using URL safe alphabet
[I] Trying to decode: "       "
Must raise CryptAda_Syntax_Error
Calling to Decode
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Z==="
Must raise CryptAda_Syntax_Error
Calling to Decode
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Zm8b**"
Must raise CryptAda_Syntax_Error
Calling to Decode
Calling to End_Decoding
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Zm9v=="
Must raise CryptAda_Syntax_Error
Calling to Decode
Calling to End_Decoding
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: " Zm9vYmE="
Must raise CryptAda_Syntax_Error
Calling to Decode
[I] Raised CryptAda_Syntax_Error
[I] Trying to decode: "Zm9vYmFya="
Must raise CryptAda_Syntax_Error
Calling to Decode
Calling to End_Decoding
[I] Raised CryptAda_Syntax_Error
[I] Test case OK
--------------------------------------------------------------------------------
Test Case Number: 9
Test Case Result: PASSED
Finished        : 2017/03/31 - 19:29:05
--[End Test Case]---------------------------------------------------------------

================================================================================
CryptAda Test Driver End
CryptAda Test Driver Name: CryptAda.Tests.Unit.Base64_Encoders
Finished                 : 2017/03/31 - 19:29:05
================================================================================
