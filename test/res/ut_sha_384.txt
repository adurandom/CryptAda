================================================================================
TCantos Ada Cryptography Library (CryptAda)
Version: 0.1.a (2017/03/31)
Copyright (c) 2017, Antonio Duran
================================================================================
CryptAda Test Driver Begin
CryptAda Test Driver Name: CryptAda.Tests.Unit.SHA_384
Description              : Unit test driver for CryptAda.Digests.Algorithms.SHA_384 functionality.
Started                  : 2017/03/13 - 15:36:32
================================================================================

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 1
Description     : CryptAda message digest basic operation
Started         : 2017/03/13 - 15:36:32
--------------------------------------------------------------------------------
[I] Digest object information before Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : ( 0,  0)
[I] Digest object information after Digest_Start()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : ( 0,  0)
[I] Digesting string              : "CryptAda By TCantos Software"
[I] Digest object information after Digest()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : ( 224,  0)
[I] Ending digest processing and obtaining hash
    Obtained hash                 : "4741885c0ac81dfebc612da4f96c5f748e6fe18f6a20eaf6d829b1f60953c6e774f3d7a2aa1cf0f9833f907725380aad"
    Expected hash                 : "4741885c0ac81dfebc612da4f96c5f748e6fe18f6a20eaf6d829b1f60953c6e774f3d7a2aa1cf0f9833f907725380aad"
[I] Digest object information after Digest_End()
[I] Information of digest object:
    Digest object tag name        : "CRYPTADA.DIGESTS.ALGORITHMS.SHA_384.SHA_384_DIGEST"
    CryptAda digest algorithm id  : "MD_SHA_384"
    Digest algorithm SCAN name    : ""
    Digest algorithm ASN1 OID     : "2.16.840.1.101.3.4.2.2"
    Digest algorithm OpenPGP name : ""
    State size (bytes)            :  64
    Input block size (bytes)      :  128
    Hash size (bytes)             :  48
    Processed bit count           : ( 0,  0)
--------------------------------------------------------------------------------
Test Case Number: 1
Test Case Result: PASSED
Finished        : 2017/03/13 - 15:36:32
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 2
Description     : Standard SHA-384 test vectors
Started         : 2017/03/13 - 15:36:32
--------------------------------------------------------------------------------
[I] Using test vectors obtained from http://www.di-mgt.com.au/sha_testvectors.html
    Number of vectors to test:  4
[I] Computing hash for a test vector:
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da274edebfe76f65fbd51ad2f14898b95b"
    Obtained hash (String)        : "38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da274edebfe76f65fbd51ad2f14898b95b"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for a test vector:
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed8086072ba1e7cc2358baeca134c825a7"
    Obtained hash (String)        : "cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed8086072ba1e7cc2358baeca134c825a7"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for a test vector:
    Vector string                 : "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"
    Vector length                 :  56
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#62#, 16#63#, 16#64#, 16#65#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#64#, 16#65#, 16#66#, 16#67#, 16#65#, 16#66#, 16#67#, 16#68#, 
16#66#, 16#67#, 16#68#, 16#69#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#68#, 16#69#, 
16#6A#, 16#6B#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#6E#, 16#6F#, 16#70#, 16#71#
[I] Digest results
    Expected bit count (Low, High): ( 448,  0)
    Obtained bit count (Low, High): ( 448,  0)
    Expected hash (String)        : "3391fdddfc8dc7393707a65b1b4709397cf8b1d162af05abfe8f450de5f36bc6b0455a8520bc4e6f5fe95b1fe3c8452b"
    Obtained hash (String)        : "3391fdddfc8dc7393707a65b1b4709397cf8b1d162af05abfe8f450de5f36bc6b0455a8520bc4e6f5fe95b1fe3c8452b"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for a test vector:
    Vector string                 : "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"
    Vector length                 :  112
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#62#, 16#63#, 
16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#63#, 16#64#, 16#65#, 16#66#, 
16#67#, 16#68#, 16#69#, 16#6A#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 
16#6A#, 16#6B#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 
16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#67#, 16#68#, 
16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#68#, 16#69#, 16#6A#, 16#6B#, 
16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#6C#, 16#6D#, 
16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 
16#71#, 16#72#, 16#73#, 16#74#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 
16#74#, 16#75#
[I] Digest results
    Expected bit count (Low, High): ( 896,  0)
    Obtained bit count (Low, High): ( 896,  0)
    Expected hash (String)        : "09330c33f71147e83d192fc782cd1b4753111b173b3b05d22fa08086e3b0f712fcc7c71a557e2db966c3e9fa91746039"
    Obtained hash (String)        : "09330c33f71147e83d192fc782cd1b4753111b173b3b05d22fa08086e3b0f712fcc7c71a557e2db966c3e9fa91746039"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
--------------------------------------------------------------------------------
Test Case Number: 2
Test Case Result: PASSED
Finished        : 2017/03/13 - 15:36:32
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 3
Description     : CryptAda SHA-384 test vectors
Started         : 2017/03/13 - 15:36:32
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
    Number of vectors to test:  9
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  1
    Vector string                 : ""
    Vector length                 :  0
    Vector array                  : 

[I] Digest results for vector     :  1
    Expected bit count (Low, High): ( 0,  0)
    Obtained bit count (Low, High): ( 0,  0)
    Expected hash (String)        : "38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da274edebfe76f65fbd51ad2f14898b95b"
    Obtained hash (String)        : "38b060a751ac96384cd9327eb1b1e36a21fdb71114be07434c0cc7bf63f6e1da274edebfe76f65fbd51ad2f14898b95b"
[I] Counters match
[I] Hashes match
[I] Vector  1 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  2
    Vector string                 : "a"
    Vector length                 :  1
    Vector array                  : 
16#61#
[I] Digest results for vector     :  2
    Expected bit count (Low, High): ( 8,  0)
    Obtained bit count (Low, High): ( 8,  0)
    Expected hash (String)        : "54a59b9f22b0b80880d8427e548b7c23abd873486e1f035dce9cd697e85175033caa88e6d57bc35efae0b5afd3145f31"
    Obtained hash (String)        : "54a59b9f22b0b80880d8427e548b7c23abd873486e1f035dce9cd697e85175033caa88e6d57bc35efae0b5afd3145f31"
[I] Counters match
[I] Hashes match
[I] Vector  2 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  3
    Vector string                 : "abc"
    Vector length                 :  3
    Vector array                  : 
16#61#, 16#62#, 16#63#
[I] Digest results for vector     :  3
    Expected bit count (Low, High): ( 24,  0)
    Obtained bit count (Low, High): ( 24,  0)
    Expected hash (String)        : "cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed8086072ba1e7cc2358baeca134c825a7"
    Obtained hash (String)        : "cb00753f45a35e8bb5a03d699ac65007272c32ab0eded1631a8b605a43ff5bed8086072ba1e7cc2358baeca134c825a7"
[I] Counters match
[I] Hashes match
[I] Vector  3 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  4
    Vector string                 : "message digest"
    Vector length                 :  14
    Vector array                  : 
16#6D#, 16#65#, 16#73#, 16#73#, 16#61#, 16#67#, 16#65#, 16#20#, 16#64#, 16#69#, 
16#67#, 16#65#, 16#73#, 16#74#
[I] Digest results for vector     :  4
    Expected bit count (Low, High): ( 112,  0)
    Obtained bit count (Low, High): ( 112,  0)
    Expected hash (String)        : "473ed35167ec1f5d8e550368a3db39be54639f828868e9454c239fc8b52e3c61dbd0d8b4de1390c256dcbb5d5fd99cd5"
    Obtained hash (String)        : "473ed35167ec1f5d8e550368a3db39be54639f828868e9454c239fc8b52e3c61dbd0d8b4de1390c256dcbb5d5fd99cd5"
[I] Counters match
[I] Hashes match
[I] Vector  4 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  5
    Vector string                 : "abcdefghijklmnopqrstuvwxyz"
    Vector length                 :  26
    Vector array                  : 
16#61#, 16#62#, 16#63#, 16#64#, 16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 
16#6B#, 16#6C#, 16#6D#, 16#6E#, 16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 
16#75#, 16#76#, 16#77#, 16#78#, 16#79#, 16#7A#
[I] Digest results for vector     :  5
    Expected bit count (Low, High): ( 208,  0)
    Obtained bit count (Low, High): ( 208,  0)
    Expected hash (String)        : "feb67349df3db6f5924815d6c3dc133f091809213731fe5c7b5f4999e463479ff2877f5f2936fa63bb43784b12f3ebb4"
    Obtained hash (String)        : "feb67349df3db6f5924815d6c3dc133f091809213731fe5c7b5f4999e463479ff2877f5f2936fa63bb43784b12f3ebb4"
[I] Counters match
[I] Hashes match
[I] Vector  5 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  6
    Vector string                 : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
    Vector length                 :  62
    Vector array                  : 
16#41#, 16#42#, 16#43#, 16#44#, 16#45#, 16#46#, 16#47#, 16#48#, 16#49#, 16#4A#, 
16#4B#, 16#4C#, 16#4D#, 16#4E#, 16#4F#, 16#50#, 16#51#, 16#52#, 16#53#, 16#54#, 
16#55#, 16#56#, 16#57#, 16#58#, 16#59#, 16#5A#, 16#61#, 16#62#, 16#63#, 16#64#, 
16#65#, 16#66#, 16#67#, 16#68#, 16#69#, 16#6A#, 16#6B#, 16#6C#, 16#6D#, 16#6E#, 
16#6F#, 16#70#, 16#71#, 16#72#, 16#73#, 16#74#, 16#75#, 16#76#, 16#77#, 16#78#, 
16#79#, 16#7A#, 16#30#, 16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 
16#38#, 16#39#
[I] Digest results for vector     :  6
    Expected bit count (Low, High): ( 496,  0)
    Obtained bit count (Low, High): ( 496,  0)
    Expected hash (String)        : "1761336e3f7cbfe51deb137f026f89e01a448e3b1fafa64039c1464ee8732f11a5341a6f41e0c202294736ed64db1a84"
    Obtained hash (String)        : "1761336e3f7cbfe51deb137f026f89e01a448e3b1fafa64039c1464ee8732f11a5341a6f41e0c202294736ed64db1a84"
[I] Counters match
[I] Hashes match
[I] Vector  6 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  7
    Vector string                 : "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
    Vector length                 :  80
    Vector array                  : 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#, 
16#31#, 16#32#, 16#33#, 16#34#, 16#35#, 16#36#, 16#37#, 16#38#, 16#39#, 16#30#
[I] Digest results for vector     :  7
    Expected bit count (Low, High): ( 640,  0)
    Obtained bit count (Low, High): ( 640,  0)
    Expected hash (String)        : "b12932b0627d1c060942f5447764155655bd4da0c9afa6dd9b9ef53129af1b8fb0195996d2de9ca0df9d821ffee67026"
    Obtained hash (String)        : "b12932b0627d1c060942f5447764155655bd4da0c9afa6dd9b9ef53129af1b8fb0195996d2de9ca0df9d821ffee67026"
[I] Counters match
[I] Hashes match
[I] Vector  7 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  8
    Vector string                 : "The quick brown fox jumps over the lazy dog"
    Vector length                 :  43
    Vector array                  : 
16#54#, 16#68#, 16#65#, 16#20#, 16#71#, 16#75#, 16#69#, 16#63#, 16#6B#, 16#20#, 
16#62#, 16#72#, 16#6F#, 16#77#, 16#6E#, 16#20#, 16#66#, 16#6F#, 16#78#, 16#20#, 
16#6A#, 16#75#, 16#6D#, 16#70#, 16#73#, 16#20#, 16#6F#, 16#76#, 16#65#, 16#72#, 
16#20#, 16#74#, 16#68#, 16#65#, 16#20#, 16#6C#, 16#61#, 16#7A#, 16#79#, 16#20#, 
16#64#, 16#6F#, 16#67#
[I] Digest results for vector     :  8
    Expected bit count (Low, High): ( 344,  0)
    Obtained bit count (Low, High): ( 344,  0)
    Expected hash (String)        : "ca737f1014a48f4c0b6dd43cb177b0afd9e5169367544c494011e3317dbf9a509cb1e5dc1e85a941bbee3d7f2afbc9b1"
    Obtained hash (String)        : "ca737f1014a48f4c0b6dd43cb177b0afd9e5169367544c494011e3317dbf9a509cb1e5dc1e85a941bbee3d7f2afbc9b1"
[I] Counters match
[I] Hashes match
[I] Vector  8 test passed.
[I] Computing hash for an CryptAda standard test vector.
    Hash algorithm                : MD_SHA_384
    Test vector index             :  9
    Vector string                 : "CryptAda By TCantos Software"
    Vector length                 :  28
    Vector array                  : 
16#43#, 16#72#, 16#79#, 16#70#, 16#74#, 16#41#, 16#64#, 16#61#, 16#20#, 16#42#, 
16#79#, 16#20#, 16#54#, 16#43#, 16#61#, 16#6E#, 16#74#, 16#6F#, 16#73#, 16#20#, 
16#53#, 16#6F#, 16#66#, 16#74#, 16#77#, 16#61#, 16#72#, 16#65#
[I] Digest results for vector     :  9
    Expected bit count (Low, High): ( 224,  0)
    Obtained bit count (Low, High): ( 224,  0)
    Expected hash (String)        : "4741885c0ac81dfebc612da4f96c5f748e6fe18f6a20eaf6d829b1f60953c6e774f3d7a2aa1cf0f9833f907725380aad"
    Obtained hash (String)        : "4741885c0ac81dfebc612da4f96c5f748e6fe18f6a20eaf6d829b1f60953c6e774f3d7a2aa1cf0f9833f907725380aad"
[I] Counters match
[I] Hashes match
[I] Vector  9 test passed.
--------------------------------------------------------------------------------
Test Case Number: 3
Test Case Result: PASSED
Finished        : 2017/03/13 - 15:36:32
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 4
Description     : Testing SHA-384 operation at counter offset and block boundary.
Started         : 2017/03/13 - 15:36:32
--------------------------------------------------------------------------------
[I] Obtained hashes are checked against values obtained by using several online tools
[I] Checking at counter offset boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  111
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 888,  0)
    Obtained bit count (Low, High): ( 888,  0)
    Expected hash (String)        : "3c37955051cb5c3026f94d551d5b5e2ac38d572ae4e07172085fed81f8466b8f90dc23a8ffcdea0b8d8e58e8fdacc80a"
    Obtained hash (String)        : "3c37955051cb5c3026f94d551d5b5e2ac38d572ae4e07172085fed81f8466b8f90dc23a8ffcdea0b8d8e58e8fdacc80a"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  112
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 896,  0)
    Obtained bit count (Low, High): ( 896,  0)
    Expected hash (String)        : "187d4e07cb306103c69967bf544d0dfbe9042577599c73c330abc0cb64c61236d5ed565ee19119d8c31779a38f791fcd"
    Obtained hash (String)        : "187d4e07cb306103c69967bf544d0dfbe9042577599c73c330abc0cb64c61236d5ed565ee19119d8c31779a38f791fcd"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  113
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 904,  0)
    Obtained bit count (Low, High): ( 904,  0)
    Expected hash (String)        : "1d6bed01626682961b50da078a6b1da707c1da0c8a0a3226f159235bd45ed724a0622fa6f39fd70007a6c72a5cda43ae"
    Obtained hash (String)        : "1d6bed01626682961b50da078a6b1da707c1da0c8a0a3226f159235bd45ed724a0622fa6f39fd70007a6c72a5cda43ae"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
[I] Checking at block boundary.
    Number of vectors to test:  3
[I] Vector   :  1
Vector length:  127
[I] Digest result for test vector:  1
    Expected bit count (Low, High): ( 1016,  0)
    Obtained bit count (Low, High): ( 1016,  0)
    Expected hash (String)        : "9bd06b1763c2cf7aef40e795dc65bc96d59c41b537f3ad72ebdefd485476b5717c1aeb37c327fe9c1831b12b9efd08ae"
    Obtained hash (String)        : "9bd06b1763c2cf7aef40e795dc65bc96d59c41b537f3ad72ebdefd485476b5717c1aeb37c327fe9c1831b12b9efd08ae"
[I] Counters match
[I] Hashes match
[I] Vector  1 results match
[I] Vector   :  2
Vector length:  128
[I] Digest result for test vector:  2
    Expected bit count (Low, High): ( 1024,  0)
    Obtained bit count (Low, High): ( 1024,  0)
    Expected hash (String)        : "edb12730a366098b3b2beac75a3bef1b0969b15c48e2163c23d96994f8d1bef760c7e27f3c464d3829f56c0d53808b0b"
    Obtained hash (String)        : "edb12730a366098b3b2beac75a3bef1b0969b15c48e2163c23d96994f8d1bef760c7e27f3c464d3829f56c0d53808b0b"
[I] Counters match
[I] Hashes match
[I] Vector  2 results match
[I] Vector   :  3
Vector length:  129
[I] Digest result for test vector:  3
    Expected bit count (Low, High): ( 1032,  0)
    Obtained bit count (Low, High): ( 1032,  0)
    Expected hash (String)        : "39b6f5a7b0e781dbc419f72e49b30eaac10f2c98c4403bc610da31067fd1b48f324138c8615d2b496d08d73d5e865326"
    Obtained hash (String)        : "39b6f5a7b0e781dbc419f72e49b30eaac10f2c98c4403bc610da31067fd1b48f324138c8615d2b496d08d73d5e865326"
[I] Counters match
[I] Hashes match
[I] Vector  3 results match
--------------------------------------------------------------------------------
Test Case Number: 4
Test Case Result: PASSED
Finished        : 2017/03/13 - 15:36:32
--[End Test Case]---------------------------------------------------------------

--[Begin Test Case]-------------------------------------------------------------
Test Case Number: 5
Description     : Another standard SHA-384 test vector: 1,000,000 repetitions of 'a'
Started         : 2017/03/13 - 15:36:32
--------------------------------------------------------------------------------
[I] Performng 1,000 iteratios with a 1,000 bytes buffer
    Expected bit count (Low, High): ( 8000000,  0)
    Expected hash                 : "9d0e1809716474cb086e834e310a4a1ced149e9c00f248527972cec5704c2a5b07b8b3dc38ecc4ebae97ddd87f3d8985"
    Obtained bit count (Low, High): ( 8000000,  0)
    Obtained hash                 : "9d0e1809716474cb086e834e310a4a1ced149e9c00f248527972cec5704c2a5b07b8b3dc38ecc4ebae97ddd87f3d8985"
[I] Counters match
[I] Hashes match
--------------------------------------------------------------------------------
Test Case Number: 5
Test Case Result: PASSED
Finished        : 2017/03/13 - 15:36:32
--[End Test Case]---------------------------------------------------------------

================================================================================
CryptAda Test Driver End
CryptAda Test Driver Name: CryptAda.Tests.Unit.SHA_384
Finished                 : 2017/03/13 - 15:36:32
================================================================================
